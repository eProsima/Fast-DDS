diff --git a/asio/include/asio/detail/impl/posix_thread.ipp b/asio/include/asio/detail/impl/posix_thread.ipp
index e401766c7..b7965e990 100644
--- a/asio/include/asio/detail/impl/posix_thread.ipp
+++ b/asio/include/asio/detail/impl/posix_thread.ipp
@@ -47,6 +47,11 @@ std::size_t posix_thread::hardware_concurrency()
 {
 #if defined(_SC_NPROCESSORS_ONLN)
   long result = sysconf(_SC_NPROCESSORS_ONLN);
+
+#if defined(__QNX__)
+  result &= 0xFFFFFFFF;
+#endif //defined(__QNX__)
+
   if (result > 0)
     return result;
 #endif // defined(_SC_NPROCESSORS_ONLN)
diff --git a/asio/src/Makefile.am b/asio/src/Makefile.am
index e9b20e607..94f13506f 100644
--- a/asio/src/Makefile.am
+++ b/asio/src/Makefile.am
@@ -14,10 +14,6 @@ if HAVE_CXX17
 EXAMPLES_CPP17 = examples/cpp17
 endif

-SUBDIRS = $(EXAMPLES_CPP03) $(EXAMPLES_CPP11) $(EXAMPLES_CPP14) $(EXAMPLES_CPP17) tests
-
-DIST_SUBDIRS = examples/cpp03 examples/cpp11 examples/cpp14 examples/cpp17 tests
-
 EXTRA_DIST = \
 	Makefile.mgw \
 	Makefile.msc \
diff --git a/asio/src/tests/unit/ip/multicast.cpp b/asio/src/tests/unit/ip/multicast.cpp
index 5bc0bf802..8416d7fb1 100644
--- a/asio/src/tests/unit/ip/multicast.cpp
+++ b/asio/src/tests/unit/ip/multicast.cpp
@@ -146,17 +146,20 @@ void test()
 #if (defined(__MACH__) && defined(__APPLE__)) \
   || defined(__FreeBSD__) \
   || defined(__NetBSD__) \
-  || defined(__OpenBSD__)
+  || defined(__OpenBSD__) \
+  || defined(__QNX__)
   const ip::address multicast_address_v6 = ip::make_address("ff02::1%lo0", ec);
 #else // (defined(__MACH__) && defined(__APPLE__))
       //   || defined(__FreeBSD__)
       //   || defined(__NetBSD__)
       //   || defined(__OpenBSD__)
+      //   || defined(__QNX__)
   const ip::address multicast_address_v6 = ip::make_address("ff01::1", ec);
 #endif // (defined(__MACH__) && defined(__APPLE__))
        //   || defined(__FreeBSD__)
        //   || defined(__NetBSD__)
        //   || defined(__OpenBSD__)
+       //   || defined(__QNX__)
   ASIO_CHECK(!have_v6 || !ec);

   // join_group class.
@@ -207,11 +210,11 @@ void test()

   if (have_v6)
   {
-#if defined(__hpux)
+#if defined(__hpux) || defined(__QNX__)
     ip::multicast::outbound_interface outbound_interface(if_nametoindex("lo0"));
 #else
     ip::multicast::outbound_interface outbound_interface(1);
-#endif
+#endif // defined(__hpux) || defined(__QNX__)
     sock_v6.set_option(outbound_interface, ec);
     ASIO_CHECK_MESSAGE(!ec, ec.value() << ", " << ec.message());
   }
