// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file TypeLookupTypes.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_EPROSIMA_FASTDDS_DDS_BUILTIN_TYPELOOKUPTYPES_H_
#define _FAST_DDS_GENERATED_EPROSIMA_FASTDDS_DDS_BUILTIN_TYPELOOKUPTYPES_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "../../../../../include/fastdds/dds/xtypes/type_representation/TypeObject.h"


#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(TYPELOOKUPTYPES_SOURCE)
#define TYPELOOKUPTYPES_DllAPI __declspec( dllexport )
#else
#define TYPELOOKUPTYPES_DllAPI __declspec( dllimport )
#endif // TYPELOOKUPTYPES_SOURCE
#else
#define TYPELOOKUPTYPES_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define TYPELOOKUPTYPES_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



const int32_t DDS_RETCODE_OK = 0;
namespace eprosima {

namespace fastdds {

namespace dds {

typedef std::array<uint8_t, 12> GuidPrefix_t;



/*!
 * @brief This class represents the structure EntityId_t defined by the user in the IDL file.
 * @ingroup TypeLookupTypes
 */
class EntityId_t
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport EntityId_t();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~EntityId_t();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object eprosima::fastdds::dds::EntityId_t that will be copied.
     */
    eProsima_user_DllExport EntityId_t(
            const EntityId_t& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object eprosima::fastdds::dds::EntityId_t that will be copied.
     */
    eProsima_user_DllExport EntityId_t(
            EntityId_t&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object eprosima::fastdds::dds::EntityId_t that will be copied.
     */
    eProsima_user_DllExport EntityId_t& operator =(
            const EntityId_t& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object eprosima::fastdds::dds::EntityId_t that will be copied.
     */
    eProsima_user_DllExport EntityId_t& operator =(
            EntityId_t&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::EntityId_t object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const EntityId_t& x) const;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::EntityId_t object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const EntityId_t& x) const;

    /*!
     * @brief This function copies the value in member entityKey
     * @param _entityKey New value to be copied in member entityKey
     */
    eProsima_user_DllExport void entityKey(
            const std::array<uint8_t, 3>& _entityKey);

    /*!
     * @brief This function moves the value in member entityKey
     * @param _entityKey New value to be moved in member entityKey
     */
    eProsima_user_DllExport void entityKey(
            std::array<uint8_t, 3>&& _entityKey);

    /*!
     * @brief This function returns a constant reference to member entityKey
     * @return Constant reference to member entityKey
     */
    eProsima_user_DllExport const std::array<uint8_t, 3>& entityKey() const;

    /*!
     * @brief This function returns a reference to member entityKey
     * @return Reference to member entityKey
     */
    eProsima_user_DllExport std::array<uint8_t, 3>& entityKey();


    /*!
     * @brief This function sets a value in member entityKind
     * @param _entityKind New value for member entityKind
     */
    eProsima_user_DllExport void entityKind(
            uint8_t _entityKind);

    /*!
     * @brief This function returns the value of member entityKind
     * @return Value of member entityKind
     */
    eProsima_user_DllExport uint8_t entityKind() const;

    /*!
     * @brief This function returns a reference to member entityKind
     * @return Reference to member entityKind
     */
    eProsima_user_DllExport uint8_t& entityKind();

private:

    std::array<uint8_t, 3> m_entityKey{0};
    uint8_t m_entityKind{0};

};


/*!
 * @brief This class represents the structure GUID_t defined by the user in the IDL file.
 * @ingroup TypeLookupTypes
 */
class GUID_t
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport GUID_t();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~GUID_t();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object eprosima::fastdds::dds::GUID_t that will be copied.
     */
    eProsima_user_DllExport GUID_t(
            const GUID_t& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object eprosima::fastdds::dds::GUID_t that will be copied.
     */
    eProsima_user_DllExport GUID_t(
            GUID_t&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object eprosima::fastdds::dds::GUID_t that will be copied.
     */
    eProsima_user_DllExport GUID_t& operator =(
            const GUID_t& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object eprosima::fastdds::dds::GUID_t that will be copied.
     */
    eProsima_user_DllExport GUID_t& operator =(
            GUID_t&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::GUID_t object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const GUID_t& x) const;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::GUID_t object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const GUID_t& x) const;

    /*!
     * @brief This function copies the value in member guidPrefix
     * @param _guidPrefix New value to be copied in member guidPrefix
     */
    eProsima_user_DllExport void guidPrefix(
            const eprosima::fastdds::dds::GuidPrefix_t& _guidPrefix);

    /*!
     * @brief This function moves the value in member guidPrefix
     * @param _guidPrefix New value to be moved in member guidPrefix
     */
    eProsima_user_DllExport void guidPrefix(
            eprosima::fastdds::dds::GuidPrefix_t&& _guidPrefix);

    /*!
     * @brief This function returns a constant reference to member guidPrefix
     * @return Constant reference to member guidPrefix
     */
    eProsima_user_DllExport const eprosima::fastdds::dds::GuidPrefix_t& guidPrefix() const;

    /*!
     * @brief This function returns a reference to member guidPrefix
     * @return Reference to member guidPrefix
     */
    eProsima_user_DllExport eprosima::fastdds::dds::GuidPrefix_t& guidPrefix();


    /*!
     * @brief This function copies the value in member entityId
     * @param _entityId New value to be copied in member entityId
     */
    eProsima_user_DllExport void entityId(
            const eprosima::fastdds::dds::EntityId_t& _entityId);

    /*!
     * @brief This function moves the value in member entityId
     * @param _entityId New value to be moved in member entityId
     */
    eProsima_user_DllExport void entityId(
            eprosima::fastdds::dds::EntityId_t&& _entityId);

    /*!
     * @brief This function returns a constant reference to member entityId
     * @return Constant reference to member entityId
     */
    eProsima_user_DllExport const eprosima::fastdds::dds::EntityId_t& entityId() const;

    /*!
     * @brief This function returns a reference to member entityId
     * @return Reference to member entityId
     */
    eProsima_user_DllExport eprosima::fastdds::dds::EntityId_t& entityId();

private:

    eprosima::fastdds::dds::GuidPrefix_t m_guidPrefix{0};
    eprosima::fastdds::dds::EntityId_t m_entityId;

};


/*!
 * @brief This class represents the structure SequenceNumber_t defined by the user in the IDL file.
 * @ingroup TypeLookupTypes
 */
class SequenceNumber_t
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport SequenceNumber_t();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~SequenceNumber_t();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object eprosima::fastdds::dds::SequenceNumber_t that will be copied.
     */
    eProsima_user_DllExport SequenceNumber_t(
            const SequenceNumber_t& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object eprosima::fastdds::dds::SequenceNumber_t that will be copied.
     */
    eProsima_user_DllExport SequenceNumber_t(
            SequenceNumber_t&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object eprosima::fastdds::dds::SequenceNumber_t that will be copied.
     */
    eProsima_user_DllExport SequenceNumber_t& operator =(
            const SequenceNumber_t& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object eprosima::fastdds::dds::SequenceNumber_t that will be copied.
     */
    eProsima_user_DllExport SequenceNumber_t& operator =(
            SequenceNumber_t&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::SequenceNumber_t object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const SequenceNumber_t& x) const;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::SequenceNumber_t object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const SequenceNumber_t& x) const;

    /*!
     * @brief This function sets a value in member high
     * @param _high New value for member high
     */
    eProsima_user_DllExport void high(
            int32_t _high);

    /*!
     * @brief This function returns the value of member high
     * @return Value of member high
     */
    eProsima_user_DllExport int32_t high() const;

    /*!
     * @brief This function returns a reference to member high
     * @return Reference to member high
     */
    eProsima_user_DllExport int32_t& high();


    /*!
     * @brief This function sets a value in member low
     * @param _low New value for member low
     */
    eProsima_user_DllExport void low(
            uint32_t _low);

    /*!
     * @brief This function returns the value of member low
     * @return Value of member low
     */
    eProsima_user_DllExport uint32_t low() const;

    /*!
     * @brief This function returns a reference to member low
     * @return Reference to member low
     */
    eProsima_user_DllExport uint32_t& low();

private:

    int32_t m_high{0};
    uint32_t m_low{0};

};


/*!
 * @brief This class represents the structure SampleIdentity defined by the user in the IDL file.
 * @ingroup TypeLookupTypes
 */
class SampleIdentity
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport SampleIdentity();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~SampleIdentity();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object eprosima::fastdds::dds::SampleIdentity that will be copied.
     */
    eProsima_user_DllExport SampleIdentity(
            const SampleIdentity& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object eprosima::fastdds::dds::SampleIdentity that will be copied.
     */
    eProsima_user_DllExport SampleIdentity(
            SampleIdentity&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object eprosima::fastdds::dds::SampleIdentity that will be copied.
     */
    eProsima_user_DllExport SampleIdentity& operator =(
            const SampleIdentity& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object eprosima::fastdds::dds::SampleIdentity that will be copied.
     */
    eProsima_user_DllExport SampleIdentity& operator =(
            SampleIdentity&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::SampleIdentity object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const SampleIdentity& x) const;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::SampleIdentity object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const SampleIdentity& x) const;

    /*!
     * @brief This function copies the value in member writer_guid
     * @param _writer_guid New value to be copied in member writer_guid
     */
    eProsima_user_DllExport void writer_guid(
            const eprosima::fastdds::dds::GUID_t& _writer_guid);

    /*!
     * @brief This function moves the value in member writer_guid
     * @param _writer_guid New value to be moved in member writer_guid
     */
    eProsima_user_DllExport void writer_guid(
            eprosima::fastdds::dds::GUID_t&& _writer_guid);

    /*!
     * @brief This function returns a constant reference to member writer_guid
     * @return Constant reference to member writer_guid
     */
    eProsima_user_DllExport const eprosima::fastdds::dds::GUID_t& writer_guid() const;

    /*!
     * @brief This function returns a reference to member writer_guid
     * @return Reference to member writer_guid
     */
    eProsima_user_DllExport eprosima::fastdds::dds::GUID_t& writer_guid();


    /*!
     * @brief This function copies the value in member sequence_number
     * @param _sequence_number New value to be copied in member sequence_number
     */
    eProsima_user_DllExport void sequence_number(
            const eprosima::fastdds::dds::SequenceNumber_t& _sequence_number);

    /*!
     * @brief This function moves the value in member sequence_number
     * @param _sequence_number New value to be moved in member sequence_number
     */
    eProsima_user_DllExport void sequence_number(
            eprosima::fastdds::dds::SequenceNumber_t&& _sequence_number);

    /*!
     * @brief This function returns a constant reference to member sequence_number
     * @return Constant reference to member sequence_number
     */
    eProsima_user_DllExport const eprosima::fastdds::dds::SequenceNumber_t& sequence_number() const;

    /*!
     * @brief This function returns a reference to member sequence_number
     * @return Reference to member sequence_number
     */
    eProsima_user_DllExport eprosima::fastdds::dds::SequenceNumber_t& sequence_number();

private:

    eprosima::fastdds::dds::GUID_t m_writer_guid;
    eprosima::fastdds::dds::SequenceNumber_t m_sequence_number;

};
namespace rpc {

typedef uint8_t UnknownOperation;

typedef uint8_t UnknownException;

typedef uint8_t UnusedMember;

/*!
 * @brief This class represents the enumeration RemoteExceptionCode_t defined by the user in the IDL file.
 * @ingroup TypeLookupTypes
 */
enum RemoteExceptionCode_t : uint32_t
{
    REMOTE_EX_OK,
    REMOTE_EX_UNSUPPORTED,
    REMOTE_EX_INVALID_ARGUMENT,
    REMOTE_EX_OUT_OF_RESOURCES,
    REMOTE_EX_UNKNOWN_OPERATION,
    REMOTE_EX_UNKNOWN_EXCEPTION
};
typedef eprosima::fastcdr::fixed_string<255> InstanceName;



/*!
 * @brief This class represents the structure RequestHeader defined by the user in the IDL file.
 * @ingroup TypeLookupTypes
 */
class RequestHeader
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport RequestHeader();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~RequestHeader();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object eprosima::fastdds::dds::rpc::RequestHeader that will be copied.
     */
    eProsima_user_DllExport RequestHeader(
            const RequestHeader& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object eprosima::fastdds::dds::rpc::RequestHeader that will be copied.
     */
    eProsima_user_DllExport RequestHeader(
            RequestHeader&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object eprosima::fastdds::dds::rpc::RequestHeader that will be copied.
     */
    eProsima_user_DllExport RequestHeader& operator =(
            const RequestHeader& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object eprosima::fastdds::dds::rpc::RequestHeader that will be copied.
     */
    eProsima_user_DllExport RequestHeader& operator =(
            RequestHeader&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::rpc::RequestHeader object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const RequestHeader& x) const;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::rpc::RequestHeader object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const RequestHeader& x) const;

    /*!
     * @brief This function copies the value in member requestId
     * @param _requestId New value to be copied in member requestId
     */
    eProsima_user_DllExport void requestId(
            const eprosima::fastdds::dds::SampleIdentity& _requestId);

    /*!
     * @brief This function moves the value in member requestId
     * @param _requestId New value to be moved in member requestId
     */
    eProsima_user_DllExport void requestId(
            eprosima::fastdds::dds::SampleIdentity&& _requestId);

    /*!
     * @brief This function returns a constant reference to member requestId
     * @return Constant reference to member requestId
     */
    eProsima_user_DllExport const eprosima::fastdds::dds::SampleIdentity& requestId() const;

    /*!
     * @brief This function returns a reference to member requestId
     * @return Reference to member requestId
     */
    eProsima_user_DllExport eprosima::fastdds::dds::SampleIdentity& requestId();


    /*!
     * @brief This function copies the value in member instanceName
     * @param _instanceName New value to be copied in member instanceName
     */
    eProsima_user_DllExport void instanceName(
            const eprosima::fastdds::dds::rpc::InstanceName& _instanceName);

    /*!
     * @brief This function moves the value in member instanceName
     * @param _instanceName New value to be moved in member instanceName
     */
    eProsima_user_DllExport void instanceName(
            eprosima::fastdds::dds::rpc::InstanceName&& _instanceName);

    /*!
     * @brief This function returns a constant reference to member instanceName
     * @return Constant reference to member instanceName
     */
    eProsima_user_DllExport const eprosima::fastdds::dds::rpc::InstanceName& instanceName() const;

    /*!
     * @brief This function returns a reference to member instanceName
     * @return Reference to member instanceName
     */
    eProsima_user_DllExport eprosima::fastdds::dds::rpc::InstanceName& instanceName();

private:

    eprosima::fastdds::dds::SampleIdentity m_requestId;
    eprosima::fastdds::dds::rpc::InstanceName m_instanceName;

};


/*!
 * @brief This class represents the structure ReplyHeader defined by the user in the IDL file.
 * @ingroup TypeLookupTypes
 */
class ReplyHeader
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport ReplyHeader();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~ReplyHeader();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object eprosima::fastdds::dds::rpc::ReplyHeader that will be copied.
     */
    eProsima_user_DllExport ReplyHeader(
            const ReplyHeader& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object eprosima::fastdds::dds::rpc::ReplyHeader that will be copied.
     */
    eProsima_user_DllExport ReplyHeader(
            ReplyHeader&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object eprosima::fastdds::dds::rpc::ReplyHeader that will be copied.
     */
    eProsima_user_DllExport ReplyHeader& operator =(
            const ReplyHeader& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object eprosima::fastdds::dds::rpc::ReplyHeader that will be copied.
     */
    eProsima_user_DllExport ReplyHeader& operator =(
            ReplyHeader&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::rpc::ReplyHeader object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const ReplyHeader& x) const;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::rpc::ReplyHeader object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const ReplyHeader& x) const;

    /*!
     * @brief This function copies the value in member relatedRequestId
     * @param _relatedRequestId New value to be copied in member relatedRequestId
     */
    eProsima_user_DllExport void relatedRequestId(
            const eprosima::fastdds::dds::SampleIdentity& _relatedRequestId);

    /*!
     * @brief This function moves the value in member relatedRequestId
     * @param _relatedRequestId New value to be moved in member relatedRequestId
     */
    eProsima_user_DllExport void relatedRequestId(
            eprosima::fastdds::dds::SampleIdentity&& _relatedRequestId);

    /*!
     * @brief This function returns a constant reference to member relatedRequestId
     * @return Constant reference to member relatedRequestId
     */
    eProsima_user_DllExport const eprosima::fastdds::dds::SampleIdentity& relatedRequestId() const;

    /*!
     * @brief This function returns a reference to member relatedRequestId
     * @return Reference to member relatedRequestId
     */
    eProsima_user_DllExport eprosima::fastdds::dds::SampleIdentity& relatedRequestId();


    /*!
     * @brief This function sets a value in member remoteEx
     * @param _remoteEx New value for member remoteEx
     */
    eProsima_user_DllExport void remoteEx(
            eprosima::fastdds::dds::rpc::RemoteExceptionCode_t _remoteEx);

    /*!
     * @brief This function returns the value of member remoteEx
     * @return Value of member remoteEx
     */
    eProsima_user_DllExport eprosima::fastdds::dds::rpc::RemoteExceptionCode_t remoteEx() const;

    /*!
     * @brief This function returns a reference to member remoteEx
     * @return Reference to member remoteEx
     */
    eProsima_user_DllExport eprosima::fastdds::dds::rpc::RemoteExceptionCode_t& remoteEx();

private:

    eprosima::fastdds::dds::SampleIdentity m_relatedRequestId;
    eprosima::fastdds::dds::rpc::RemoteExceptionCode_t m_remoteEx{eprosima::fastdds::dds::rpc::REMOTE_EX_OK};

};

} // namespace rpc
namespace builtin {

const uint32_t TypeLookup_getTypes_HashId = 0x018252d3;
const uint32_t TypeLookup_getDependencies_HashId = 0x05aafb31;


/*!
 * @brief This class represents the structure TypeLookup_getTypes_In defined by the user in the IDL file.
 * @ingroup TypeLookupTypes
 */
class TypeLookup_getTypes_In
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport TypeLookup_getTypes_In();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~TypeLookup_getTypes_In();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypes_In that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypes_In(
            const TypeLookup_getTypes_In& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypes_In that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypes_In(
            TypeLookup_getTypes_In&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypes_In that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypes_In& operator =(
            const TypeLookup_getTypes_In& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypes_In that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypes_In& operator =(
            TypeLookup_getTypes_In&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_getTypes_In object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const TypeLookup_getTypes_In& x) const;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_getTypes_In object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const TypeLookup_getTypes_In& x) const;

    /*!
     * @brief This function copies the value in member type_ids
     * @param _type_ids New value to be copied in member type_ids
     */
    eProsima_user_DllExport void type_ids(
            const std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifier>& _type_ids);

    /*!
     * @brief This function moves the value in member type_ids
     * @param _type_ids New value to be moved in member type_ids
     */
    eProsima_user_DllExport void type_ids(
            std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifier>&& _type_ids);

    /*!
     * @brief This function returns a constant reference to member type_ids
     * @return Constant reference to member type_ids
     */
    eProsima_user_DllExport const std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifier>& type_ids() const;

    /*!
     * @brief This function returns a reference to member type_ids
     * @return Reference to member type_ids
     */
    eProsima_user_DllExport std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifier>& type_ids();

private:

    std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifier> m_type_ids;

};


/*!
 * @brief This class represents the structure TypeLookup_getTypes_Out defined by the user in the IDL file.
 * @ingroup TypeLookupTypes
 */
class TypeLookup_getTypes_Out
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport TypeLookup_getTypes_Out();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~TypeLookup_getTypes_Out();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Out that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypes_Out(
            const TypeLookup_getTypes_Out& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Out that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypes_Out(
            TypeLookup_getTypes_Out&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Out that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypes_Out& operator =(
            const TypeLookup_getTypes_Out& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Out that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypes_Out& operator =(
            TypeLookup_getTypes_Out&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Out object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const TypeLookup_getTypes_Out& x) const;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Out object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const TypeLookup_getTypes_Out& x) const;

    /*!
     * @brief This function copies the value in member types
     * @param _types New value to be copied in member types
     */
    eProsima_user_DllExport void types(
            const std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifierTypeObjectPair>& _types);

    /*!
     * @brief This function moves the value in member types
     * @param _types New value to be moved in member types
     */
    eProsima_user_DllExport void types(
            std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifierTypeObjectPair>&& _types);

    /*!
     * @brief This function returns a constant reference to member types
     * @return Constant reference to member types
     */
    eProsima_user_DllExport const std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifierTypeObjectPair>& types() const;

    /*!
     * @brief This function returns a reference to member types
     * @return Reference to member types
     */
    eProsima_user_DllExport std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifierTypeObjectPair>& types();


    /*!
     * @brief This function copies the value in member complete_to_minimal
     * @param _complete_to_minimal New value to be copied in member complete_to_minimal
     */
    eProsima_user_DllExport void complete_to_minimal(
            const std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifierPair>& _complete_to_minimal);

    /*!
     * @brief This function moves the value in member complete_to_minimal
     * @param _complete_to_minimal New value to be moved in member complete_to_minimal
     */
    eProsima_user_DllExport void complete_to_minimal(
            std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifierPair>&& _complete_to_minimal);

    /*!
     * @brief This function returns a constant reference to member complete_to_minimal
     * @return Constant reference to member complete_to_minimal
     */
    eProsima_user_DllExport const std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifierPair>& complete_to_minimal() const;

    /*!
     * @brief This function returns a reference to member complete_to_minimal
     * @return Reference to member complete_to_minimal
     */
    eProsima_user_DllExport std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifierPair>& complete_to_minimal();

private:

    std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifierTypeObjectPair> m_types;
    std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifierPair> m_complete_to_minimal;

};


/*!
 * @brief This class represents the union TypeLookup_getTypes_Result defined by the user in the IDL file.
 * @ingroup TypeLookupTypes
 */
class TypeLookup_getTypes_Result
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport TypeLookup_getTypes_Result();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~TypeLookup_getTypes_Result();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Result that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypes_Result(
            const TypeLookup_getTypes_Result& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Result that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypes_Result(
            TypeLookup_getTypes_Result&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Result that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypes_Result& operator =(
            const TypeLookup_getTypes_Result& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Result that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypes_Result& operator =(
            TypeLookup_getTypes_Result&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Result object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const TypeLookup_getTypes_Result& x) const;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Result object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const TypeLookup_getTypes_Result& x) const;

    /*!
     * @brief This function sets the discriminator value.
     * @param __d New value for the discriminator.
     * @exception eprosima::fastcdr::BadParamException This exception is thrown if the new value doesn't correspond to the selected union member.
     */
    eProsima_user_DllExport void _d(
            int32_t __d);

    /*!
     * @brief This function returns the value of the discriminator.
     * @return Value of the discriminator
     */
    eProsima_user_DllExport int32_t _d() const;

    /*!
     * @brief This function returns a reference to the discriminator.
     * @return Reference to the discriminator.
     */
    eProsima_user_DllExport int32_t& _d();

    /*!
     * @brief This function copies the value in member result
     * @param _result New value to be copied in member result
     */
    eProsima_user_DllExport void result(
            const eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Out& _result);

    /*!
     * @brief This function moves the value in member result
     * @param _result New value to be moved in member result
     */
    eProsima_user_DllExport void result(
            eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Out&& _result);

    /*!
     * @brief This function returns a constant reference to member result
     * @return Constant reference to member result
     * @exception eprosima::fastcdr::BadParamException This exception is thrown if the requested union member is not the current selection.
     */
    eProsima_user_DllExport const eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Out& result() const;

    /*!
     * @brief This function returns a reference to member result
     * @return Reference to member result
     * @exception eprosima::fastcdr::BadParamException This exception is thrown if the requested union member is not the current selection.
     */
    eProsima_user_DllExport eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Out& result();

private:

    int32_t m__d;

    eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Out m_result;
};


/*!
 * @brief This class represents the structure TypeLookup_getTypeDependencies_In defined by the user in the IDL file.
 * @ingroup TypeLookupTypes
 */
class TypeLookup_getTypeDependencies_In
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport TypeLookup_getTypeDependencies_In();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~TypeLookup_getTypeDependencies_In();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_In that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypeDependencies_In(
            const TypeLookup_getTypeDependencies_In& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_In that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypeDependencies_In(
            TypeLookup_getTypeDependencies_In&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_In that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypeDependencies_In& operator =(
            const TypeLookup_getTypeDependencies_In& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_In that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypeDependencies_In& operator =(
            TypeLookup_getTypeDependencies_In&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_In object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const TypeLookup_getTypeDependencies_In& x) const;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_In object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const TypeLookup_getTypeDependencies_In& x) const;

    /*!
     * @brief This function copies the value in member type_ids
     * @param _type_ids New value to be copied in member type_ids
     */
    eProsima_user_DllExport void type_ids(
            const std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifier>& _type_ids);

    /*!
     * @brief This function moves the value in member type_ids
     * @param _type_ids New value to be moved in member type_ids
     */
    eProsima_user_DllExport void type_ids(
            std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifier>&& _type_ids);

    /*!
     * @brief This function returns a constant reference to member type_ids
     * @return Constant reference to member type_ids
     */
    eProsima_user_DllExport const std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifier>& type_ids() const;

    /*!
     * @brief This function returns a reference to member type_ids
     * @return Reference to member type_ids
     */
    eProsima_user_DllExport std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifier>& type_ids();


    /*!
     * @brief This function copies the value in member continuation_point
     * @param _continuation_point New value to be copied in member continuation_point
     */
    eProsima_user_DllExport void continuation_point(
            const std::vector<uint8_t>& _continuation_point);

    /*!
     * @brief This function moves the value in member continuation_point
     * @param _continuation_point New value to be moved in member continuation_point
     */
    eProsima_user_DllExport void continuation_point(
            std::vector<uint8_t>&& _continuation_point);

    /*!
     * @brief This function returns a constant reference to member continuation_point
     * @return Constant reference to member continuation_point
     */
    eProsima_user_DllExport const std::vector<uint8_t>& continuation_point() const;

    /*!
     * @brief This function returns a reference to member continuation_point
     * @return Reference to member continuation_point
     */
    eProsima_user_DllExport std::vector<uint8_t>& continuation_point();

private:

    std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentifier> m_type_ids;
    std::vector<uint8_t> m_continuation_point;

};


/*!
 * @brief This class represents the structure TypeLookup_getTypeDependencies_Out defined by the user in the IDL file.
 * @ingroup TypeLookupTypes
 */
class TypeLookup_getTypeDependencies_Out
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport TypeLookup_getTypeDependencies_Out();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~TypeLookup_getTypeDependencies_Out();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Out that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypeDependencies_Out(
            const TypeLookup_getTypeDependencies_Out& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Out that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypeDependencies_Out(
            TypeLookup_getTypeDependencies_Out&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Out that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypeDependencies_Out& operator =(
            const TypeLookup_getTypeDependencies_Out& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Out that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypeDependencies_Out& operator =(
            TypeLookup_getTypeDependencies_Out&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Out object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const TypeLookup_getTypeDependencies_Out& x) const;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Out object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const TypeLookup_getTypeDependencies_Out& x) const;

    /*!
     * @brief This function copies the value in member dependent_typeids
     * @param _dependent_typeids New value to be copied in member dependent_typeids
     */
    eProsima_user_DllExport void dependent_typeids(
            const std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentfierWithSize>& _dependent_typeids);

    /*!
     * @brief This function moves the value in member dependent_typeids
     * @param _dependent_typeids New value to be moved in member dependent_typeids
     */
    eProsima_user_DllExport void dependent_typeids(
            std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentfierWithSize>&& _dependent_typeids);

    /*!
     * @brief This function returns a constant reference to member dependent_typeids
     * @return Constant reference to member dependent_typeids
     */
    eProsima_user_DllExport const std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentfierWithSize>& dependent_typeids() const;

    /*!
     * @brief This function returns a reference to member dependent_typeids
     * @return Reference to member dependent_typeids
     */
    eProsima_user_DllExport std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentfierWithSize>& dependent_typeids();


    /*!
     * @brief This function copies the value in member continuation_point
     * @param _continuation_point New value to be copied in member continuation_point
     */
    eProsima_user_DllExport void continuation_point(
            const std::vector<uint8_t>& _continuation_point);

    /*!
     * @brief This function moves the value in member continuation_point
     * @param _continuation_point New value to be moved in member continuation_point
     */
    eProsima_user_DllExport void continuation_point(
            std::vector<uint8_t>&& _continuation_point);

    /*!
     * @brief This function returns a constant reference to member continuation_point
     * @return Constant reference to member continuation_point
     */
    eProsima_user_DllExport const std::vector<uint8_t>& continuation_point() const;

    /*!
     * @brief This function returns a reference to member continuation_point
     * @return Reference to member continuation_point
     */
    eProsima_user_DllExport std::vector<uint8_t>& continuation_point();

private:

    std::vector<eprosima::fastdds::dds::xtypes1_3::TypeIdentfierWithSize> m_dependent_typeids;
    std::vector<uint8_t> m_continuation_point;

};


/*!
 * @brief This class represents the union TypeLookup_getTypeDependencies_Result defined by the user in the IDL file.
 * @ingroup TypeLookupTypes
 */
class TypeLookup_getTypeDependencies_Result
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport TypeLookup_getTypeDependencies_Result();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~TypeLookup_getTypeDependencies_Result();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Result that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypeDependencies_Result(
            const TypeLookup_getTypeDependencies_Result& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Result that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypeDependencies_Result(
            TypeLookup_getTypeDependencies_Result&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Result that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypeDependencies_Result& operator =(
            const TypeLookup_getTypeDependencies_Result& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Result that will be copied.
     */
    eProsima_user_DllExport TypeLookup_getTypeDependencies_Result& operator =(
            TypeLookup_getTypeDependencies_Result&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Result object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const TypeLookup_getTypeDependencies_Result& x) const;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Result object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const TypeLookup_getTypeDependencies_Result& x) const;

    /*!
     * @brief This function sets the discriminator value.
     * @param __d New value for the discriminator.
     * @exception eprosima::fastcdr::BadParamException This exception is thrown if the new value doesn't correspond to the selected union member.
     */
    eProsima_user_DllExport void _d(
            int32_t __d);

    /*!
     * @brief This function returns the value of the discriminator.
     * @return Value of the discriminator
     */
    eProsima_user_DllExport int32_t _d() const;

    /*!
     * @brief This function returns a reference to the discriminator.
     * @return Reference to the discriminator.
     */
    eProsima_user_DllExport int32_t& _d();

    /*!
     * @brief This function copies the value in member result
     * @param _result New value to be copied in member result
     */
    eProsima_user_DllExport void result(
            const eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Out& _result);

    /*!
     * @brief This function moves the value in member result
     * @param _result New value to be moved in member result
     */
    eProsima_user_DllExport void result(
            eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Out&& _result);

    /*!
     * @brief This function returns a constant reference to member result
     * @return Constant reference to member result
     * @exception eprosima::fastcdr::BadParamException This exception is thrown if the requested union member is not the current selection.
     */
    eProsima_user_DllExport const eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Out& result() const;

    /*!
     * @brief This function returns a reference to member result
     * @return Reference to member result
     * @exception eprosima::fastcdr::BadParamException This exception is thrown if the requested union member is not the current selection.
     */
    eProsima_user_DllExport eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Out& result();

private:

    int32_t m__d;

    eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Out m_result;
};


/*!
 * @brief This class represents the union TypeLookup_Call defined by the user in the IDL file.
 * @ingroup TypeLookupTypes
 */
class TypeLookup_Call
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport TypeLookup_Call();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~TypeLookup_Call();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_Call that will be copied.
     */
    eProsima_user_DllExport TypeLookup_Call(
            const TypeLookup_Call& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_Call that will be copied.
     */
    eProsima_user_DllExport TypeLookup_Call(
            TypeLookup_Call&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_Call that will be copied.
     */
    eProsima_user_DllExport TypeLookup_Call& operator =(
            const TypeLookup_Call& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_Call that will be copied.
     */
    eProsima_user_DllExport TypeLookup_Call& operator =(
            TypeLookup_Call&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_Call object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const TypeLookup_Call& x) const;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_Call object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const TypeLookup_Call& x) const;

    /*!
     * @brief This function sets the discriminator value.
     * @param __d New value for the discriminator.
     * @exception eprosima::fastcdr::BadParamException This exception is thrown if the new value doesn't correspond to the selected union member.
     */
    eProsima_user_DllExport void _d(
            int32_t __d);

    /*!
     * @brief This function returns the value of the discriminator.
     * @return Value of the discriminator
     */
    eProsima_user_DllExport int32_t _d() const;

    /*!
     * @brief This function returns a reference to the discriminator.
     * @return Reference to the discriminator.
     */
    eProsima_user_DllExport int32_t& _d();

    /*!
     * @brief This function copies the value in member getTypes
     * @param _getTypes New value to be copied in member getTypes
     */
    eProsima_user_DllExport void getTypes(
            const eprosima::fastdds::dds::builtin::TypeLookup_getTypes_In& _getTypes);

    /*!
     * @brief This function moves the value in member getTypes
     * @param _getTypes New value to be moved in member getTypes
     */
    eProsima_user_DllExport void getTypes(
            eprosima::fastdds::dds::builtin::TypeLookup_getTypes_In&& _getTypes);

    /*!
     * @brief This function returns a constant reference to member getTypes
     * @return Constant reference to member getTypes
     * @exception eprosima::fastcdr::BadParamException This exception is thrown if the requested union member is not the current selection.
     */
    eProsima_user_DllExport const eprosima::fastdds::dds::builtin::TypeLookup_getTypes_In& getTypes() const;

    /*!
     * @brief This function returns a reference to member getTypes
     * @return Reference to member getTypes
     * @exception eprosima::fastcdr::BadParamException This exception is thrown if the requested union member is not the current selection.
     */
    eProsima_user_DllExport eprosima::fastdds::dds::builtin::TypeLookup_getTypes_In& getTypes();


    /*!
     * @brief This function copies the value in member getTypeDependencies
     * @param _getTypeDependencies New value to be copied in member getTypeDependencies
     */
    eProsima_user_DllExport void getTypeDependencies(
            const eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_In& _getTypeDependencies);

    /*!
     * @brief This function moves the value in member getTypeDependencies
     * @param _getTypeDependencies New value to be moved in member getTypeDependencies
     */
    eProsima_user_DllExport void getTypeDependencies(
            eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_In&& _getTypeDependencies);

    /*!
     * @brief This function returns a constant reference to member getTypeDependencies
     * @return Constant reference to member getTypeDependencies
     * @exception eprosima::fastcdr::BadParamException This exception is thrown if the requested union member is not the current selection.
     */
    eProsima_user_DllExport const eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_In& getTypeDependencies() const;

    /*!
     * @brief This function returns a reference to member getTypeDependencies
     * @return Reference to member getTypeDependencies
     * @exception eprosima::fastcdr::BadParamException This exception is thrown if the requested union member is not the current selection.
     */
    eProsima_user_DllExport eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_In& getTypeDependencies();

private:

    int32_t m__d;

    eprosima::fastdds::dds::builtin::TypeLookup_getTypes_In m_getTypes;
    eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_In m_getTypeDependencies;
};


/*!
 * @brief This class represents the structure TypeLookup_Request defined by the user in the IDL file.
 * @ingroup TypeLookupTypes
 */
class TypeLookup_Request
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport TypeLookup_Request();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~TypeLookup_Request();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_Request that will be copied.
     */
    eProsima_user_DllExport TypeLookup_Request(
            const TypeLookup_Request& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_Request that will be copied.
     */
    eProsima_user_DllExport TypeLookup_Request(
            TypeLookup_Request&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_Request that will be copied.
     */
    eProsima_user_DllExport TypeLookup_Request& operator =(
            const TypeLookup_Request& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_Request that will be copied.
     */
    eProsima_user_DllExport TypeLookup_Request& operator =(
            TypeLookup_Request&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_Request object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const TypeLookup_Request& x) const;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_Request object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const TypeLookup_Request& x) const;

    /*!
     * @brief This function copies the value in member header
     * @param _header New value to be copied in member header
     */
    eProsima_user_DllExport void header(
            const eprosima::fastdds::dds::rpc::RequestHeader& _header);

    /*!
     * @brief This function moves the value in member header
     * @param _header New value to be moved in member header
     */
    eProsima_user_DllExport void header(
            eprosima::fastdds::dds::rpc::RequestHeader&& _header);

    /*!
     * @brief This function returns a constant reference to member header
     * @return Constant reference to member header
     */
    eProsima_user_DllExport const eprosima::fastdds::dds::rpc::RequestHeader& header() const;

    /*!
     * @brief This function returns a reference to member header
     * @return Reference to member header
     */
    eProsima_user_DllExport eprosima::fastdds::dds::rpc::RequestHeader& header();


    /*!
     * @brief This function copies the value in member data
     * @param _data New value to be copied in member data
     */
    eProsima_user_DllExport void data(
            const eprosima::fastdds::dds::builtin::TypeLookup_Call& _data);

    /*!
     * @brief This function moves the value in member data
     * @param _data New value to be moved in member data
     */
    eProsima_user_DllExport void data(
            eprosima::fastdds::dds::builtin::TypeLookup_Call&& _data);

    /*!
     * @brief This function returns a constant reference to member data
     * @return Constant reference to member data
     */
    eProsima_user_DllExport const eprosima::fastdds::dds::builtin::TypeLookup_Call& data() const;

    /*!
     * @brief This function returns a reference to member data
     * @return Reference to member data
     */
    eProsima_user_DllExport eprosima::fastdds::dds::builtin::TypeLookup_Call& data();

private:

    eprosima::fastdds::dds::rpc::RequestHeader m_header;
    eprosima::fastdds::dds::builtin::TypeLookup_Call m_data;

};


/*!
 * @brief This class represents the union TypeLookup_Return defined by the user in the IDL file.
 * @ingroup TypeLookupTypes
 */
class TypeLookup_Return
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport TypeLookup_Return();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~TypeLookup_Return();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_Return that will be copied.
     */
    eProsima_user_DllExport TypeLookup_Return(
            const TypeLookup_Return& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_Return that will be copied.
     */
    eProsima_user_DllExport TypeLookup_Return(
            TypeLookup_Return&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_Return that will be copied.
     */
    eProsima_user_DllExport TypeLookup_Return& operator =(
            const TypeLookup_Return& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_Return that will be copied.
     */
    eProsima_user_DllExport TypeLookup_Return& operator =(
            TypeLookup_Return&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_Return object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const TypeLookup_Return& x) const;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_Return object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const TypeLookup_Return& x) const;

    /*!
     * @brief This function sets the discriminator value.
     * @param __d New value for the discriminator.
     * @exception eprosima::fastcdr::BadParamException This exception is thrown if the new value doesn't correspond to the selected union member.
     */
    eProsima_user_DllExport void _d(
            int32_t __d);

    /*!
     * @brief This function returns the value of the discriminator.
     * @return Value of the discriminator
     */
    eProsima_user_DllExport int32_t _d() const;

    /*!
     * @brief This function returns a reference to the discriminator.
     * @return Reference to the discriminator.
     */
    eProsima_user_DllExport int32_t& _d();

    /*!
     * @brief This function copies the value in member getType
     * @param _getType New value to be copied in member getType
     */
    eProsima_user_DllExport void getType(
            const eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Result& _getType);

    /*!
     * @brief This function moves the value in member getType
     * @param _getType New value to be moved in member getType
     */
    eProsima_user_DllExport void getType(
            eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Result&& _getType);

    /*!
     * @brief This function returns a constant reference to member getType
     * @return Constant reference to member getType
     * @exception eprosima::fastcdr::BadParamException This exception is thrown if the requested union member is not the current selection.
     */
    eProsima_user_DllExport const eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Result& getType() const;

    /*!
     * @brief This function returns a reference to member getType
     * @return Reference to member getType
     * @exception eprosima::fastcdr::BadParamException This exception is thrown if the requested union member is not the current selection.
     */
    eProsima_user_DllExport eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Result& getType();


    /*!
     * @brief This function copies the value in member getTypeDependencies
     * @param _getTypeDependencies New value to be copied in member getTypeDependencies
     */
    eProsima_user_DllExport void getTypeDependencies(
            const eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Result& _getTypeDependencies);

    /*!
     * @brief This function moves the value in member getTypeDependencies
     * @param _getTypeDependencies New value to be moved in member getTypeDependencies
     */
    eProsima_user_DllExport void getTypeDependencies(
            eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Result&& _getTypeDependencies);

    /*!
     * @brief This function returns a constant reference to member getTypeDependencies
     * @return Constant reference to member getTypeDependencies
     * @exception eprosima::fastcdr::BadParamException This exception is thrown if the requested union member is not the current selection.
     */
    eProsima_user_DllExport const eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Result& getTypeDependencies() const;

    /*!
     * @brief This function returns a reference to member getTypeDependencies
     * @return Reference to member getTypeDependencies
     * @exception eprosima::fastcdr::BadParamException This exception is thrown if the requested union member is not the current selection.
     */
    eProsima_user_DllExport eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Result& getTypeDependencies();

private:

    int32_t m__d;

    eprosima::fastdds::dds::builtin::TypeLookup_getTypes_Result m_getType;
    eprosima::fastdds::dds::builtin::TypeLookup_getTypeDependencies_Result m_getTypeDependencies;
};


/*!
 * @brief This class represents the structure TypeLookup_Reply defined by the user in the IDL file.
 * @ingroup TypeLookupTypes
 */
class TypeLookup_Reply
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport TypeLookup_Reply();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~TypeLookup_Reply();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_Reply that will be copied.
     */
    eProsima_user_DllExport TypeLookup_Reply(
            const TypeLookup_Reply& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_Reply that will be copied.
     */
    eProsima_user_DllExport TypeLookup_Reply(
            TypeLookup_Reply&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_Reply that will be copied.
     */
    eProsima_user_DllExport TypeLookup_Reply& operator =(
            const TypeLookup_Reply& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object eprosima::fastdds::dds::builtin::TypeLookup_Reply that will be copied.
     */
    eProsima_user_DllExport TypeLookup_Reply& operator =(
            TypeLookup_Reply&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_Reply object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const TypeLookup_Reply& x) const;

    /*!
     * @brief Comparison operator.
     * @param x eprosima::fastdds::dds::builtin::TypeLookup_Reply object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const TypeLookup_Reply& x) const;

    /*!
     * @brief This function copies the value in member header
     * @param _header New value to be copied in member header
     */
    eProsima_user_DllExport void header(
            const eprosima::fastdds::dds::rpc::ReplyHeader& _header);

    /*!
     * @brief This function moves the value in member header
     * @param _header New value to be moved in member header
     */
    eProsima_user_DllExport void header(
            eprosima::fastdds::dds::rpc::ReplyHeader&& _header);

    /*!
     * @brief This function returns a constant reference to member header
     * @return Constant reference to member header
     */
    eProsima_user_DllExport const eprosima::fastdds::dds::rpc::ReplyHeader& header() const;

    /*!
     * @brief This function returns a reference to member header
     * @return Reference to member header
     */
    eProsima_user_DllExport eprosima::fastdds::dds::rpc::ReplyHeader& header();


    /*!
     * @brief This function copies the value in member return_value
     * @param _return_value New value to be copied in member return_value
     */
    eProsima_user_DllExport void return_value(
            const eprosima::fastdds::dds::builtin::TypeLookup_Return& _return_value);

    /*!
     * @brief This function moves the value in member return_value
     * @param _return_value New value to be moved in member return_value
     */
    eProsima_user_DllExport void return_value(
            eprosima::fastdds::dds::builtin::TypeLookup_Return&& _return_value);

    /*!
     * @brief This function returns a constant reference to member return_value
     * @return Constant reference to member return_value
     */
    eProsima_user_DllExport const eprosima::fastdds::dds::builtin::TypeLookup_Return& return_value() const;

    /*!
     * @brief This function returns a reference to member return_value
     * @return Reference to member return_value
     */
    eProsima_user_DllExport eprosima::fastdds::dds::builtin::TypeLookup_Return& return_value();

private:

    eprosima::fastdds::dds::rpc::ReplyHeader m_header;
    eprosima::fastdds::dds::builtin::TypeLookup_Return m_return_value;

};

} // namespace builtin

} // namespace dds

} // namespace fastdds

} // namespace eprosima

#endif // _FAST_DDS_GENERATED_EPROSIMA_FASTDDS_DDS_BUILTIN_TYPELOOKUPTYPES_H_



