// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file appendable_annotation.hpp
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen (version: 4.2.0).
 */

#ifndef FAST_DDS_GENERATED__APPENDABLE_ANNOTATION_HPP
#define FAST_DDS_GENERATED__APPENDABLE_ANNOTATION_HPP

#include <cstdint>
#include <utility>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(APPENDABLE_ANNOTATION_SOURCE)
#define APPENDABLE_ANNOTATION_DllAPI __declspec( dllexport )
#else
#define APPENDABLE_ANNOTATION_DllAPI __declspec( dllimport )
#endif // APPENDABLE_ANNOTATION_SOURCE
#else
#define APPENDABLE_ANNOTATION_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define APPENDABLE_ANNOTATION_DllAPI
#endif // _WIN32

/*!
 * @brief This class represents the structure appendable_ann_valid_struct defined by the user in the IDL file.
 * @ingroup appendable_annotation
 */
class appendable_ann_valid_struct
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport appendable_ann_valid_struct()
    {
    }

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~appendable_ann_valid_struct()
    {
    }

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object appendable_ann_valid_struct that will be copied.
     */
    eProsima_user_DllExport appendable_ann_valid_struct(
            const appendable_ann_valid_struct& x)
    {
                    m_first = x.m_first;

    }

    /*!
     * @brief Move constructor.
     * @param x Reference to the object appendable_ann_valid_struct that will be copied.
     */
    eProsima_user_DllExport appendable_ann_valid_struct(
            appendable_ann_valid_struct&& x) noexcept
    {
        m_first = x.m_first;
    }

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object appendable_ann_valid_struct that will be copied.
     */
    eProsima_user_DllExport appendable_ann_valid_struct& operator =(
            const appendable_ann_valid_struct& x)
    {

                    m_first = x.m_first;

        return *this;
    }

    /*!
     * @brief Move assignment.
     * @param x Reference to the object appendable_ann_valid_struct that will be copied.
     */
    eProsima_user_DllExport appendable_ann_valid_struct& operator =(
            appendable_ann_valid_struct&& x) noexcept
    {

        m_first = x.m_first;
        return *this;
    }

    /*!
     * @brief Comparison operator.
     * @param x appendable_ann_valid_struct object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const appendable_ann_valid_struct& x) const
    {
        return (m_first == x.m_first);
    }

    /*!
     * @brief Comparison operator.
     * @param x appendable_ann_valid_struct object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const appendable_ann_valid_struct& x) const
    {
        return !(*this == x);
    }

    /*!
     * @brief This function sets a value in member first
     * @param _first New value for member first
     */
    eProsima_user_DllExport void first(
            int32_t _first)
    {
        m_first = _first;
    }

    /*!
     * @brief This function returns the value of member first
     * @return Value of member first
     */
    eProsima_user_DllExport int32_t first() const
    {
        return m_first;
    }

    /*!
     * @brief This function returns a reference to member first
     * @return Reference to member first
     */
    eProsima_user_DllExport int32_t& first()
    {
        return m_first;
    }



private:

    int32_t m_first{0};

};
/*!
 * @brief This class represents the structure appendable_ann_extra_parameter_struct defined by the user in the IDL file.
 * @ingroup appendable_annotation
 */
class appendable_ann_extra_parameter_struct
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport appendable_ann_extra_parameter_struct()
    {
    }

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~appendable_ann_extra_parameter_struct()
    {
    }

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object appendable_ann_extra_parameter_struct that will be copied.
     */
    eProsima_user_DllExport appendable_ann_extra_parameter_struct(
            const appendable_ann_extra_parameter_struct& x)
    {
                    m_first = x.m_first;

    }

    /*!
     * @brief Move constructor.
     * @param x Reference to the object appendable_ann_extra_parameter_struct that will be copied.
     */
    eProsima_user_DllExport appendable_ann_extra_parameter_struct(
            appendable_ann_extra_parameter_struct&& x) noexcept
    {
        m_first = x.m_first;
    }

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object appendable_ann_extra_parameter_struct that will be copied.
     */
    eProsima_user_DllExport appendable_ann_extra_parameter_struct& operator =(
            const appendable_ann_extra_parameter_struct& x)
    {

                    m_first = x.m_first;

        return *this;
    }

    /*!
     * @brief Move assignment.
     * @param x Reference to the object appendable_ann_extra_parameter_struct that will be copied.
     */
    eProsima_user_DllExport appendable_ann_extra_parameter_struct& operator =(
            appendable_ann_extra_parameter_struct&& x) noexcept
    {

        m_first = x.m_first;
        return *this;
    }

    /*!
     * @brief Comparison operator.
     * @param x appendable_ann_extra_parameter_struct object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const appendable_ann_extra_parameter_struct& x) const
    {
        return (m_first == x.m_first);
    }

    /*!
     * @brief Comparison operator.
     * @param x appendable_ann_extra_parameter_struct object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const appendable_ann_extra_parameter_struct& x) const
    {
        return !(*this == x);
    }

    /*!
     * @brief This function sets a value in member first
     * @param _first New value for member first
     */
    eProsima_user_DllExport void first(
            int32_t _first)
    {
        m_first = _first;
    }

    /*!
     * @brief This function returns the value of member first
     * @return Value of member first
     */
    eProsima_user_DllExport int32_t first() const
    {
        return m_first;
    }

    /*!
     * @brief This function returns a reference to member first
     * @return Reference to member first
     */
    eProsima_user_DllExport int32_t& first()
    {
        return m_first;
    }



private:

    int32_t m_first{0};

};
/*!
 * @brief This class represents the structure appendable_ann_on_struct_member defined by the user in the IDL file.
 * @ingroup appendable_annotation
 */
class appendable_ann_on_struct_member
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport appendable_ann_on_struct_member()
    {
    }

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~appendable_ann_on_struct_member()
    {
    }

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object appendable_ann_on_struct_member that will be copied.
     */
    eProsima_user_DllExport appendable_ann_on_struct_member(
            const appendable_ann_on_struct_member& x)
    {
                    m_first = x.m_first;

    }

    /*!
     * @brief Move constructor.
     * @param x Reference to the object appendable_ann_on_struct_member that will be copied.
     */
    eProsima_user_DllExport appendable_ann_on_struct_member(
            appendable_ann_on_struct_member&& x) noexcept
    {
        m_first = x.m_first;
    }

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object appendable_ann_on_struct_member that will be copied.
     */
    eProsima_user_DllExport appendable_ann_on_struct_member& operator =(
            const appendable_ann_on_struct_member& x)
    {

                    m_first = x.m_first;

        return *this;
    }

    /*!
     * @brief Move assignment.
     * @param x Reference to the object appendable_ann_on_struct_member that will be copied.
     */
    eProsima_user_DllExport appendable_ann_on_struct_member& operator =(
            appendable_ann_on_struct_member&& x) noexcept
    {

        m_first = x.m_first;
        return *this;
    }

    /*!
     * @brief Comparison operator.
     * @param x appendable_ann_on_struct_member object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const appendable_ann_on_struct_member& x) const
    {
        return (m_first == x.m_first);
    }

    /*!
     * @brief Comparison operator.
     * @param x appendable_ann_on_struct_member object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const appendable_ann_on_struct_member& x) const
    {
        return !(*this == x);
    }

    /*!
     * @brief This function sets a value in member first
     * @param _first New value for member first
     */
    eProsima_user_DllExport void first(
            int32_t _first)
    {
        m_first = _first;
    }

    /*!
     * @brief This function returns the value of member first
     * @return Value of member first
     */
    eProsima_user_DllExport int32_t first() const
    {
        return m_first;
    }

    /*!
     * @brief This function returns a reference to member first
     * @return Reference to member first
     */
    eProsima_user_DllExport int32_t& first()
    {
        return m_first;
    }



private:

    int32_t m_first{0};

};

#endif // _FAST_DDS_GENERATED_APPENDABLE_ANNOTATION_HPP_


