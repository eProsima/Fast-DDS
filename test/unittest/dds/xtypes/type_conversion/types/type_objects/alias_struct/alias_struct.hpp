// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file alias_struct.hpp
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_ALIAS_STRUCT_HPP_
#define _FAST_DDS_GENERATED_ALIAS_STRUCT_HPP_

#include <cstdint>
#include <utility>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(ALIAS_STRUCT_SOURCE)
#define ALIAS_STRUCT_DllAPI __declspec( dllexport )
#else
#define ALIAS_STRUCT_DllAPI __declspec( dllimport )
#endif // ALIAS_STRUCT_SOURCE
#else
#define ALIAS_STRUCT_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define ALIAS_STRUCT_DllAPI
#endif // _WIN32

typedef int16_t MyShort;

typedef uint32_t MyLong;

typedef MyShort MyRecursiveShort;

/*!
 * @brief This class represents the structure alias_struct defined by the user in the IDL file.
 * @ingroup alias_struct
 */
class alias_struct
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport alias_struct()
    {
    }

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~alias_struct()
    {
    }

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object alias_struct that will be copied.
     */
    eProsima_user_DllExport alias_struct(
            const alias_struct& x)
    {
                    m_my_short = x.m_my_short;

                    m_my_long = x.m_my_long;

                    m_my_recursive_short = x.m_my_recursive_short;

    }

    /*!
     * @brief Move constructor.
     * @param x Reference to the object alias_struct that will be copied.
     */
    eProsima_user_DllExport alias_struct(
            alias_struct&& x) noexcept
    {
        m_my_short = x.m_my_short;
        m_my_long = x.m_my_long;
        m_my_recursive_short = x.m_my_recursive_short;
    }

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object alias_struct that will be copied.
     */
    eProsima_user_DllExport alias_struct& operator =(
            const alias_struct& x)
    {

                    m_my_short = x.m_my_short;

                    m_my_long = x.m_my_long;

                    m_my_recursive_short = x.m_my_recursive_short;

        return *this;
    }

    /*!
     * @brief Move assignment.
     * @param x Reference to the object alias_struct that will be copied.
     */
    eProsima_user_DllExport alias_struct& operator =(
            alias_struct&& x) noexcept
    {

        m_my_short = x.m_my_short;
        m_my_long = x.m_my_long;
        m_my_recursive_short = x.m_my_recursive_short;
        return *this;
    }

    /*!
     * @brief Comparison operator.
     * @param x alias_struct object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const alias_struct& x) const
    {
        return (m_my_short == x.m_my_short &&
           m_my_long == x.m_my_long &&
           m_my_recursive_short == x.m_my_recursive_short);
    }

    /*!
     * @brief Comparison operator.
     * @param x alias_struct object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const alias_struct& x) const
    {
        return !(*this == x);
    }

    /*!
     * @brief This function sets a value in member my_short
     * @param _my_short New value for member my_short
     */
    eProsima_user_DllExport void my_short(
            MyShort _my_short)
    {
        m_my_short = _my_short;
    }

    /*!
     * @brief This function returns the value of member my_short
     * @return Value of member my_short
     */
    eProsima_user_DllExport MyShort my_short() const
    {
        return m_my_short;
    }

    /*!
     * @brief This function returns a reference to member my_short
     * @return Reference to member my_short
     */
    eProsima_user_DllExport MyShort& my_short()
    {
        return m_my_short;
    }


    /*!
     * @brief This function sets a value in member my_long
     * @param _my_long New value for member my_long
     */
    eProsima_user_DllExport void my_long(
            MyLong _my_long)
    {
        m_my_long = _my_long;
    }

    /*!
     * @brief This function returns the value of member my_long
     * @return Value of member my_long
     */
    eProsima_user_DllExport MyLong my_long() const
    {
        return m_my_long;
    }

    /*!
     * @brief This function returns a reference to member my_long
     * @return Reference to member my_long
     */
    eProsima_user_DllExport MyLong& my_long()
    {
        return m_my_long;
    }


    /*!
     * @brief This function sets a value in member my_recursive_short
     * @param _my_recursive_short New value for member my_recursive_short
     */
    eProsima_user_DllExport void my_recursive_short(
            MyRecursiveShort _my_recursive_short)
    {
        m_my_recursive_short = _my_recursive_short;
    }

    /*!
     * @brief This function returns the value of member my_recursive_short
     * @return Value of member my_recursive_short
     */
    eProsima_user_DllExport MyRecursiveShort my_recursive_short() const
    {
        return m_my_recursive_short;
    }

    /*!
     * @brief This function returns a reference to member my_recursive_short
     * @return Reference to member my_recursive_short
     */
    eProsima_user_DllExport MyRecursiveShort& my_recursive_short()
    {
        return m_my_recursive_short;
    }



private:

    MyShort m_my_short{0};
    MyLong m_my_long{0};
    MyRecursiveShort m_my_recursive_short{0};

};

#endif // _FAST_DDS_GENERATED_ALIAS_STRUCT_HPP_


