// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file inheritance.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _FAST_DDS_GENERATED_INHERITANCE_H_
#define _FAST_DDS_GENERATED_INHERITANCE_H_

#include "helpers/basic_inner_types.h"

#include <fastrtps/utils/fixed_size_string.hpp>

#include <stdint.h>
#include <array>
#include <string>
#include <vector>
#include <map>
#include <bitset>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(INHERITANCE_SOURCE)
#define INHERITANCE_DllAPI __declspec( dllexport )
#else
#define INHERITANCE_DllAPI __declspec( dllimport )
#endif // INHERITANCE_SOURCE
#else
#define INHERITANCE_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define INHERITANCE_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
} // namespace fastcdr
} // namespace eprosima


typedef int32_t InnerAliasHelper;
typedef eprosima::fastrtps::fixed_string<10> Inner_alias_bounded_string_helper;
typedef std::wstring Inner_alias_bounded_wstring_helper;
typedef std::array<int16_t, 2> Inner_alias_array_helper;
typedef std::vector<int16_t> Inner_alias_sequence_helper;
typedef std::map<int32_t, int32_t> Inner_alias_map_helper;
/*!
 * @brief This class represents the structure InnerStructureHelperChild defined by the user in the IDL file.
 * @ingroup inheritance
 */
class InnerStructureHelperChild : public InnerStructureHelper 
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport InnerStructureHelperChild();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~InnerStructureHelperChild();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object InnerStructureHelperChild that will be copied.
     */
    eProsima_user_DllExport InnerStructureHelperChild(
            const InnerStructureHelperChild& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object InnerStructureHelperChild that will be copied.
     */
    eProsima_user_DllExport InnerStructureHelperChild(
            InnerStructureHelperChild&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object InnerStructureHelperChild that will be copied.
     */
    eProsima_user_DllExport InnerStructureHelperChild& operator =(
            const InnerStructureHelperChild& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object InnerStructureHelperChild that will be copied.
     */
    eProsima_user_DllExport InnerStructureHelperChild& operator =(
            InnerStructureHelperChild&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x InnerStructureHelperChild object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const InnerStructureHelperChild& x) const;

    /*!
     * @brief Comparison operator.
     * @param x InnerStructureHelperChild object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const InnerStructureHelperChild& x) const;

    /*!
     * @brief This function sets a value in member var_child_longlong
     * @param _var_child_longlong New value for member var_child_longlong
     */
    eProsima_user_DllExport void var_child_longlong(
            int64_t _var_child_longlong);

    /*!
     * @brief This function returns the value of member var_child_longlong
     * @return Value of member var_child_longlong
     */
    eProsima_user_DllExport int64_t var_child_longlong() const;

    /*!
     * @brief This function returns a reference to member var_child_longlong
     * @return Reference to member var_child_longlong
     */
    eProsima_user_DllExport int64_t& var_child_longlong();

    /*!
     * @brief This function sets a value in member var_child_ulonglong
     * @param _var_child_ulonglong New value for member var_child_ulonglong
     */
    eProsima_user_DllExport void var_child_ulonglong(
            uint64_t _var_child_ulonglong);

    /*!
     * @brief This function returns the value of member var_child_ulonglong
     * @return Value of member var_child_ulonglong
     */
    eProsima_user_DllExport uint64_t var_child_ulonglong() const;

    /*!
     * @brief This function returns a reference to member var_child_ulonglong
     * @return Reference to member var_child_ulonglong
     */
    eProsima_user_DllExport uint64_t& var_child_ulonglong();


    /*!
    * @brief This function returns the maximum serialized size of an object
    * depending on the buffer alignment.
    * @param current_alignment Buffer alignment.
    * @return Maximum serialized size.
    */
    eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const InnerStructureHelperChild& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);



    /*!
     * @brief This function returns the maximum serialized size of the Key of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function tells you if the Key has been defined for this type
     */
    eProsima_user_DllExport static bool isKeyDefined();

    /*!
     * @brief This function serializes the key members of an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serializeKey(
            eprosima::fastcdr::Cdr& cdr) const;

private:

    int64_t m_var_child_longlong;
    uint64_t m_var_child_ulonglong;

};
/*!
 * @brief This class represents the structure InnerStructureHelperChildChild defined by the user in the IDL file.
 * @ingroup inheritance
 */
class InnerStructureHelperChildChild : public InnerStructureHelperChild 
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport InnerStructureHelperChildChild();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~InnerStructureHelperChildChild();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object InnerStructureHelperChildChild that will be copied.
     */
    eProsima_user_DllExport InnerStructureHelperChildChild(
            const InnerStructureHelperChildChild& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object InnerStructureHelperChildChild that will be copied.
     */
    eProsima_user_DllExport InnerStructureHelperChildChild(
            InnerStructureHelperChildChild&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object InnerStructureHelperChildChild that will be copied.
     */
    eProsima_user_DllExport InnerStructureHelperChildChild& operator =(
            const InnerStructureHelperChildChild& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object InnerStructureHelperChildChild that will be copied.
     */
    eProsima_user_DllExport InnerStructureHelperChildChild& operator =(
            InnerStructureHelperChildChild&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x InnerStructureHelperChildChild object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const InnerStructureHelperChildChild& x) const;

    /*!
     * @brief Comparison operator.
     * @param x InnerStructureHelperChildChild object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const InnerStructureHelperChildChild& x) const;

    /*!
     * @brief This function sets a value in member var_child_childlonglong2
     * @param _var_child_childlonglong2 New value for member var_child_childlonglong2
     */
    eProsima_user_DllExport void var_child_childlonglong2(
            int64_t _var_child_childlonglong2);

    /*!
     * @brief This function returns the value of member var_child_childlonglong2
     * @return Value of member var_child_childlonglong2
     */
    eProsima_user_DllExport int64_t var_child_childlonglong2() const;

    /*!
     * @brief This function returns a reference to member var_child_childlonglong2
     * @return Reference to member var_child_childlonglong2
     */
    eProsima_user_DllExport int64_t& var_child_childlonglong2();

    /*!
     * @brief This function sets a value in member var_childchild_ulonglong2
     * @param _var_childchild_ulonglong2 New value for member var_childchild_ulonglong2
     */
    eProsima_user_DllExport void var_childchild_ulonglong2(
            uint64_t _var_childchild_ulonglong2);

    /*!
     * @brief This function returns the value of member var_childchild_ulonglong2
     * @return Value of member var_childchild_ulonglong2
     */
    eProsima_user_DllExport uint64_t var_childchild_ulonglong2() const;

    /*!
     * @brief This function returns a reference to member var_childchild_ulonglong2
     * @return Reference to member var_childchild_ulonglong2
     */
    eProsima_user_DllExport uint64_t& var_childchild_ulonglong2();


    /*!
    * @brief This function returns the maximum serialized size of an object
    * depending on the buffer alignment.
    * @param current_alignment Buffer alignment.
    * @return Maximum serialized size.
    */
    eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const InnerStructureHelperChildChild& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);



    /*!
     * @brief This function returns the maximum serialized size of the Key of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function tells you if the Key has been defined for this type
     */
    eProsima_user_DllExport static bool isKeyDefined();

    /*!
     * @brief This function serializes the key members of an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serializeKey(
            eprosima::fastcdr::Cdr& cdr) const;

private:

    int64_t m_var_child_childlonglong2;
    uint64_t m_var_childchild_ulonglong2;

};
/*!
 * @brief This class represents the structure InnerStructureHelperEmptyChild defined by the user in the IDL file.
 * @ingroup inheritance
 */
class InnerStructureHelperEmptyChild : public InnerStructureHelper 
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport InnerStructureHelperEmptyChild();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~InnerStructureHelperEmptyChild();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object InnerStructureHelperEmptyChild that will be copied.
     */
    eProsima_user_DllExport InnerStructureHelperEmptyChild(
            const InnerStructureHelperEmptyChild& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object InnerStructureHelperEmptyChild that will be copied.
     */
    eProsima_user_DllExport InnerStructureHelperEmptyChild(
            InnerStructureHelperEmptyChild&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object InnerStructureHelperEmptyChild that will be copied.
     */
    eProsima_user_DllExport InnerStructureHelperEmptyChild& operator =(
            const InnerStructureHelperEmptyChild& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object InnerStructureHelperEmptyChild that will be copied.
     */
    eProsima_user_DllExport InnerStructureHelperEmptyChild& operator =(
            InnerStructureHelperEmptyChild&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x InnerStructureHelperEmptyChild object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const InnerStructureHelperEmptyChild& x) const;

    /*!
     * @brief Comparison operator.
     * @param x InnerStructureHelperEmptyChild object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const InnerStructureHelperEmptyChild& x) const;


    /*!
    * @brief This function returns the maximum serialized size of an object
    * depending on the buffer alignment.
    * @param current_alignment Buffer alignment.
    * @return Maximum serialized size.
    */
    eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const InnerStructureHelperEmptyChild& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);



    /*!
     * @brief This function returns the maximum serialized size of the Key of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function tells you if the Key has been defined for this type
     */
    eProsima_user_DllExport static bool isKeyDefined();

    /*!
     * @brief This function serializes the key members of an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serializeKey(
            eprosima::fastcdr::Cdr& cdr) const;

private:


};
/*!
 * @brief This class represents the structure InnerEmptyStructureHelperChild defined by the user in the IDL file.
 * @ingroup inheritance
 */
class InnerEmptyStructureHelperChild : public InnerEmptyStructureHelper 
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport InnerEmptyStructureHelperChild();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~InnerEmptyStructureHelperChild();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object InnerEmptyStructureHelperChild that will be copied.
     */
    eProsima_user_DllExport InnerEmptyStructureHelperChild(
            const InnerEmptyStructureHelperChild& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object InnerEmptyStructureHelperChild that will be copied.
     */
    eProsima_user_DllExport InnerEmptyStructureHelperChild(
            InnerEmptyStructureHelperChild&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object InnerEmptyStructureHelperChild that will be copied.
     */
    eProsima_user_DllExport InnerEmptyStructureHelperChild& operator =(
            const InnerEmptyStructureHelperChild& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object InnerEmptyStructureHelperChild that will be copied.
     */
    eProsima_user_DllExport InnerEmptyStructureHelperChild& operator =(
            InnerEmptyStructureHelperChild&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x InnerEmptyStructureHelperChild object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const InnerEmptyStructureHelperChild& x) const;

    /*!
     * @brief Comparison operator.
     * @param x InnerEmptyStructureHelperChild object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const InnerEmptyStructureHelperChild& x) const;

    /*!
     * @brief This function sets a value in member var_child_longlong
     * @param _var_child_longlong New value for member var_child_longlong
     */
    eProsima_user_DllExport void var_child_longlong(
            int64_t _var_child_longlong);

    /*!
     * @brief This function returns the value of member var_child_longlong
     * @return Value of member var_child_longlong
     */
    eProsima_user_DllExport int64_t var_child_longlong() const;

    /*!
     * @brief This function returns a reference to member var_child_longlong
     * @return Reference to member var_child_longlong
     */
    eProsima_user_DllExport int64_t& var_child_longlong();

    /*!
     * @brief This function sets a value in member var_child_ulonglong
     * @param _var_child_ulonglong New value for member var_child_ulonglong
     */
    eProsima_user_DllExport void var_child_ulonglong(
            uint64_t _var_child_ulonglong);

    /*!
     * @brief This function returns the value of member var_child_ulonglong
     * @return Value of member var_child_ulonglong
     */
    eProsima_user_DllExport uint64_t var_child_ulonglong() const;

    /*!
     * @brief This function returns a reference to member var_child_ulonglong
     * @return Reference to member var_child_ulonglong
     */
    eProsima_user_DllExport uint64_t& var_child_ulonglong();


    /*!
    * @brief This function returns the maximum serialized size of an object
    * depending on the buffer alignment.
    * @param current_alignment Buffer alignment.
    * @return Maximum serialized size.
    */
    eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const InnerEmptyStructureHelperChild& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);



    /*!
     * @brief This function returns the maximum serialized size of the Key of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function tells you if the Key has been defined for this type
     */
    eProsima_user_DllExport static bool isKeyDefined();

    /*!
     * @brief This function serializes the key members of an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serializeKey(
            eprosima::fastcdr::Cdr& cdr) const;

private:

    int64_t m_var_child_longlong;
    uint64_t m_var_child_ulonglong;

};
/*!
 * @brief This class represents the structure StructuresInheritanceStruct defined by the user in the IDL file.
 * @ingroup inheritance
 */
class StructuresInheritanceStruct
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport StructuresInheritanceStruct();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~StructuresInheritanceStruct();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object StructuresInheritanceStruct that will be copied.
     */
    eProsima_user_DllExport StructuresInheritanceStruct(
            const StructuresInheritanceStruct& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object StructuresInheritanceStruct that will be copied.
     */
    eProsima_user_DllExport StructuresInheritanceStruct(
            StructuresInheritanceStruct&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object StructuresInheritanceStruct that will be copied.
     */
    eProsima_user_DllExport StructuresInheritanceStruct& operator =(
            const StructuresInheritanceStruct& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object StructuresInheritanceStruct that will be copied.
     */
    eProsima_user_DllExport StructuresInheritanceStruct& operator =(
            StructuresInheritanceStruct&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x StructuresInheritanceStruct object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const StructuresInheritanceStruct& x) const;

    /*!
     * @brief Comparison operator.
     * @param x StructuresInheritanceStruct object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const StructuresInheritanceStruct& x) const;

    /*!
     * @brief This function copies the value in member var_InnerStructureHelperChild
     * @param _var_InnerStructureHelperChild New value to be copied in member var_InnerStructureHelperChild
     */
    eProsima_user_DllExport void var_InnerStructureHelperChild(
            const InnerStructureHelperChild& _var_InnerStructureHelperChild);

    /*!
     * @brief This function moves the value in member var_InnerStructureHelperChild
     * @param _var_InnerStructureHelperChild New value to be moved in member var_InnerStructureHelperChild
     */
    eProsima_user_DllExport void var_InnerStructureHelperChild(
            InnerStructureHelperChild&& _var_InnerStructureHelperChild);

    /*!
     * @brief This function returns a constant reference to member var_InnerStructureHelperChild
     * @return Constant reference to member var_InnerStructureHelperChild
     */
    eProsima_user_DllExport const InnerStructureHelperChild& var_InnerStructureHelperChild() const;

    /*!
     * @brief This function returns a reference to member var_InnerStructureHelperChild
     * @return Reference to member var_InnerStructureHelperChild
     */
    eProsima_user_DllExport InnerStructureHelperChild& var_InnerStructureHelperChild();
    /*!
     * @brief This function copies the value in member var_InnerStructureHelperChildChild
     * @param _var_InnerStructureHelperChildChild New value to be copied in member var_InnerStructureHelperChildChild
     */
    eProsima_user_DllExport void var_InnerStructureHelperChildChild(
            const InnerStructureHelperChildChild& _var_InnerStructureHelperChildChild);

    /*!
     * @brief This function moves the value in member var_InnerStructureHelperChildChild
     * @param _var_InnerStructureHelperChildChild New value to be moved in member var_InnerStructureHelperChildChild
     */
    eProsima_user_DllExport void var_InnerStructureHelperChildChild(
            InnerStructureHelperChildChild&& _var_InnerStructureHelperChildChild);

    /*!
     * @brief This function returns a constant reference to member var_InnerStructureHelperChildChild
     * @return Constant reference to member var_InnerStructureHelperChildChild
     */
    eProsima_user_DllExport const InnerStructureHelperChildChild& var_InnerStructureHelperChildChild() const;

    /*!
     * @brief This function returns a reference to member var_InnerStructureHelperChildChild
     * @return Reference to member var_InnerStructureHelperChildChild
     */
    eProsima_user_DllExport InnerStructureHelperChildChild& var_InnerStructureHelperChildChild();
    /*!
     * @brief This function copies the value in member var_InnerStructureHelperEmptyChild
     * @param _var_InnerStructureHelperEmptyChild New value to be copied in member var_InnerStructureHelperEmptyChild
     */
    eProsima_user_DllExport void var_InnerStructureHelperEmptyChild(
            const InnerStructureHelperEmptyChild& _var_InnerStructureHelperEmptyChild);

    /*!
     * @brief This function moves the value in member var_InnerStructureHelperEmptyChild
     * @param _var_InnerStructureHelperEmptyChild New value to be moved in member var_InnerStructureHelperEmptyChild
     */
    eProsima_user_DllExport void var_InnerStructureHelperEmptyChild(
            InnerStructureHelperEmptyChild&& _var_InnerStructureHelperEmptyChild);

    /*!
     * @brief This function returns a constant reference to member var_InnerStructureHelperEmptyChild
     * @return Constant reference to member var_InnerStructureHelperEmptyChild
     */
    eProsima_user_DllExport const InnerStructureHelperEmptyChild& var_InnerStructureHelperEmptyChild() const;

    /*!
     * @brief This function returns a reference to member var_InnerStructureHelperEmptyChild
     * @return Reference to member var_InnerStructureHelperEmptyChild
     */
    eProsima_user_DllExport InnerStructureHelperEmptyChild& var_InnerStructureHelperEmptyChild();
    /*!
     * @brief This function copies the value in member var_InnerEmptyStructureHelperChild
     * @param _var_InnerEmptyStructureHelperChild New value to be copied in member var_InnerEmptyStructureHelperChild
     */
    eProsima_user_DllExport void var_InnerEmptyStructureHelperChild(
            const InnerEmptyStructureHelperChild& _var_InnerEmptyStructureHelperChild);

    /*!
     * @brief This function moves the value in member var_InnerEmptyStructureHelperChild
     * @param _var_InnerEmptyStructureHelperChild New value to be moved in member var_InnerEmptyStructureHelperChild
     */
    eProsima_user_DllExport void var_InnerEmptyStructureHelperChild(
            InnerEmptyStructureHelperChild&& _var_InnerEmptyStructureHelperChild);

    /*!
     * @brief This function returns a constant reference to member var_InnerEmptyStructureHelperChild
     * @return Constant reference to member var_InnerEmptyStructureHelperChild
     */
    eProsima_user_DllExport const InnerEmptyStructureHelperChild& var_InnerEmptyStructureHelperChild() const;

    /*!
     * @brief This function returns a reference to member var_InnerEmptyStructureHelperChild
     * @return Reference to member var_InnerEmptyStructureHelperChild
     */
    eProsima_user_DllExport InnerEmptyStructureHelperChild& var_InnerEmptyStructureHelperChild();

    /*!
    * @brief This function returns the maximum serialized size of an object
    * depending on the buffer alignment.
    * @param current_alignment Buffer alignment.
    * @return Maximum serialized size.
    */
    eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const StructuresInheritanceStruct& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);



    /*!
     * @brief This function returns the maximum serialized size of the Key of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function tells you if the Key has been defined for this type
     */
    eProsima_user_DllExport static bool isKeyDefined();

    /*!
     * @brief This function serializes the key members of an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serializeKey(
            eprosima::fastcdr::Cdr& cdr) const;

private:

    InnerStructureHelperChild m_var_InnerStructureHelperChild;
    InnerStructureHelperChildChild m_var_InnerStructureHelperChildChild;
    InnerStructureHelperEmptyChild m_var_InnerStructureHelperEmptyChild;
    InnerEmptyStructureHelperChild m_var_InnerEmptyStructureHelperChild;

};
/*!
 * @brief This class represents the structure InnerBitsetHelperChild defined by the user in the IDL file.
 * @ingroup inheritance
 */
class InnerBitsetHelperChild : public InnerBitsetHelper 
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport InnerBitsetHelperChild();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~InnerBitsetHelperChild();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object InnerBitsetHelperChild that will be copied.
     */
    eProsima_user_DllExport InnerBitsetHelperChild(
            const InnerBitsetHelperChild& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object InnerBitsetHelperChild that will be copied.
     */
    eProsima_user_DllExport InnerBitsetHelperChild(
            InnerBitsetHelperChild&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object InnerBitsetHelperChild that will be copied.
     */
    eProsima_user_DllExport InnerBitsetHelperChild& operator =(
            const InnerBitsetHelperChild& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object InnerBitsetHelperChild that will be copied.
     */
    eProsima_user_DllExport InnerBitsetHelperChild& operator =(
            InnerBitsetHelperChild&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x InnerBitsetHelperChild object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const InnerBitsetHelperChild& x) const;

    /*!
     * @brief Comparison operator.
     * @param x InnerBitsetHelperChild object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const InnerBitsetHelperChild& x) const;

    /*!
     * @brief This function sets a value in member child_w
     * @param _child_w New value for member child_w
     */
    eProsima_user_DllExport void child_w(
            uint32_t _child_w);

    /*!
     * @brief This function returns the value of member child_w
     * @return Value of member child_w
     */
    eProsima_user_DllExport uint32_t child_w() const;

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const InnerBitsetHelperChild& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);




private:

    std::bitset<17> m_bitset;
};
/*!
 * @brief This class represents the structure InnerBitsetHelperChildChild defined by the user in the IDL file.
 * @ingroup inheritance
 */
class InnerBitsetHelperChildChild : public InnerBitsetHelperChild 
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport InnerBitsetHelperChildChild();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~InnerBitsetHelperChildChild();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object InnerBitsetHelperChildChild that will be copied.
     */
    eProsima_user_DllExport InnerBitsetHelperChildChild(
            const InnerBitsetHelperChildChild& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object InnerBitsetHelperChildChild that will be copied.
     */
    eProsima_user_DllExport InnerBitsetHelperChildChild(
            InnerBitsetHelperChildChild&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object InnerBitsetHelperChildChild that will be copied.
     */
    eProsima_user_DllExport InnerBitsetHelperChildChild& operator =(
            const InnerBitsetHelperChildChild& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object InnerBitsetHelperChildChild that will be copied.
     */
    eProsima_user_DllExport InnerBitsetHelperChildChild& operator =(
            InnerBitsetHelperChildChild&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x InnerBitsetHelperChildChild object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const InnerBitsetHelperChildChild& x) const;

    /*!
     * @brief Comparison operator.
     * @param x InnerBitsetHelperChildChild object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const InnerBitsetHelperChildChild& x) const;

    /*!
     * @brief This function sets a value in member childchild_z
     * @param _childchild_z New value for member childchild_z
     */
    eProsima_user_DllExport void childchild_z(
            uint32_t _childchild_z);

    /*!
     * @brief This function returns the value of member childchild_z
     * @return Value of member childchild_z
     */
    eProsima_user_DllExport uint32_t childchild_z() const;

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const InnerBitsetHelperChildChild& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);




private:

    std::bitset<18> m_bitset;
};
/*!
 * @brief This class represents the structure BitsetsChildInheritanceStruct defined by the user in the IDL file.
 * @ingroup inheritance
 */
class BitsetsChildInheritanceStruct
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport BitsetsChildInheritanceStruct();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~BitsetsChildInheritanceStruct();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object BitsetsChildInheritanceStruct that will be copied.
     */
    eProsima_user_DllExport BitsetsChildInheritanceStruct(
            const BitsetsChildInheritanceStruct& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object BitsetsChildInheritanceStruct that will be copied.
     */
    eProsima_user_DllExport BitsetsChildInheritanceStruct(
            BitsetsChildInheritanceStruct&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object BitsetsChildInheritanceStruct that will be copied.
     */
    eProsima_user_DllExport BitsetsChildInheritanceStruct& operator =(
            const BitsetsChildInheritanceStruct& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object BitsetsChildInheritanceStruct that will be copied.
     */
    eProsima_user_DllExport BitsetsChildInheritanceStruct& operator =(
            BitsetsChildInheritanceStruct&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x BitsetsChildInheritanceStruct object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const BitsetsChildInheritanceStruct& x) const;

    /*!
     * @brief Comparison operator.
     * @param x BitsetsChildInheritanceStruct object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const BitsetsChildInheritanceStruct& x) const;

    /*!
     * @brief This function copies the value in member var_InnerBitsetHelperChild
     * @param _var_InnerBitsetHelperChild New value to be copied in member var_InnerBitsetHelperChild
     */
    eProsima_user_DllExport void var_InnerBitsetHelperChild(
            const InnerBitsetHelperChild& _var_InnerBitsetHelperChild);

    /*!
     * @brief This function moves the value in member var_InnerBitsetHelperChild
     * @param _var_InnerBitsetHelperChild New value to be moved in member var_InnerBitsetHelperChild
     */
    eProsima_user_DllExport void var_InnerBitsetHelperChild(
            InnerBitsetHelperChild&& _var_InnerBitsetHelperChild);

    /*!
     * @brief This function returns a constant reference to member var_InnerBitsetHelperChild
     * @return Constant reference to member var_InnerBitsetHelperChild
     */
    eProsima_user_DllExport const InnerBitsetHelperChild& var_InnerBitsetHelperChild() const;

    /*!
     * @brief This function returns a reference to member var_InnerBitsetHelperChild
     * @return Reference to member var_InnerBitsetHelperChild
     */
    eProsima_user_DllExport InnerBitsetHelperChild& var_InnerBitsetHelperChild();
    /*!
     * @brief This function copies the value in member var_InnerBitsetHelperChildChild
     * @param _var_InnerBitsetHelperChildChild New value to be copied in member var_InnerBitsetHelperChildChild
     */
    eProsima_user_DllExport void var_InnerBitsetHelperChildChild(
            const InnerBitsetHelperChildChild& _var_InnerBitsetHelperChildChild);

    /*!
     * @brief This function moves the value in member var_InnerBitsetHelperChildChild
     * @param _var_InnerBitsetHelperChildChild New value to be moved in member var_InnerBitsetHelperChildChild
     */
    eProsima_user_DllExport void var_InnerBitsetHelperChildChild(
            InnerBitsetHelperChildChild&& _var_InnerBitsetHelperChildChild);

    /*!
     * @brief This function returns a constant reference to member var_InnerBitsetHelperChildChild
     * @return Constant reference to member var_InnerBitsetHelperChildChild
     */
    eProsima_user_DllExport const InnerBitsetHelperChildChild& var_InnerBitsetHelperChildChild() const;

    /*!
     * @brief This function returns a reference to member var_InnerBitsetHelperChildChild
     * @return Reference to member var_InnerBitsetHelperChildChild
     */
    eProsima_user_DllExport InnerBitsetHelperChildChild& var_InnerBitsetHelperChildChild();

    /*!
    * @brief This function returns the maximum serialized size of an object
    * depending on the buffer alignment.
    * @param current_alignment Buffer alignment.
    * @return Maximum serialized size.
    */
    eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const BitsetsChildInheritanceStruct& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);



    /*!
     * @brief This function returns the maximum serialized size of the Key of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function tells you if the Key has been defined for this type
     */
    eProsima_user_DllExport static bool isKeyDefined();

    /*!
     * @brief This function serializes the key members of an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serializeKey(
            eprosima::fastcdr::Cdr& cdr) const;

private:

    InnerBitsetHelperChild m_var_InnerBitsetHelperChild;
    InnerBitsetHelperChildChild m_var_InnerBitsetHelperChildChild;

};

#endif // _FAST_DDS_GENERATED_INHERITANCE_H_

