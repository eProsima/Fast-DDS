// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file inheritancePubSubTypes.h
 * This header file contains the declaration of the serialization functions.
 *
 * This file was generated by the tool fastcdrgen.
 */


#ifndef _FAST_DDS_GENERATED_INHERITANCE_PUBSUBTYPES_H_
#define _FAST_DDS_GENERATED_INHERITANCE_PUBSUBTYPES_H_

#include <fastdds/dds/topic/TopicDataType.hpp>
#include <fastrtps/utils/md5.h>

#include "inheritance.h"

#include "helpers/basic_inner_typesPubSubTypes.h"

#if !defined(GEN_API_VER) || (GEN_API_VER != 1)
#error \
    Generated inheritance is not compatible with current installed Fast DDS. Please, regenerate it with fastddsgen.
#endif  // GEN_API_VER


#ifndef SWIG
namespace detail {

    template<typename Tag, typename Tag::type M>
    struct InnerStructureHelperChild_rob
    {
        friend constexpr typename Tag::type get(
                Tag)
        {
            return M;
        }
    };

    struct InnerStructureHelperChild_f
    {
        typedef uint64_t InnerStructureHelperChild::* type;
        friend constexpr type get(
                InnerStructureHelperChild_f);
    };

    template struct InnerStructureHelperChild_rob<InnerStructureHelperChild_f, &InnerStructureHelperChild::m_var_child_ulonglong>;

    template <typename T, typename Tag>
    inline size_t constexpr InnerStructureHelperChild_offset_of() {
        return ((::size_t) &reinterpret_cast<char const volatile&>((((T*)0)->*get(Tag()))));
    }
}
#endif

/*!
 * @brief This class represents the TopicDataType of the type InnerStructureHelperChild defined by the user in the IDL file.
 * @ingroup inheritance
 */
class InnerStructureHelperChildPubSubType : public eprosima::fastdds::dds::TopicDataType
{
public:

    typedef InnerStructureHelperChild type;

    eProsima_user_DllExport InnerStructureHelperChildPubSubType();

    eProsima_user_DllExport virtual ~InnerStructureHelperChildPubSubType() override;

    eProsima_user_DllExport virtual bool serialize(
            void* data,
            eprosima::fastrtps::rtps::SerializedPayload_t* payload) override;

    eProsima_user_DllExport virtual bool deserialize(
            eprosima::fastrtps::rtps::SerializedPayload_t* payload,
            void* data) override;

    eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(
            void* data) override;

    eProsima_user_DllExport virtual bool getKey(
            void* data,
            eprosima::fastrtps::rtps::InstanceHandle_t* ihandle,
            bool force_md5 = false) override;

    eProsima_user_DllExport virtual void* createData() override;

    eProsima_user_DllExport virtual void deleteData(
            void* data) override;

#ifdef TOPIC_DATA_TYPE_API_HAS_IS_BOUNDED
    eProsima_user_DllExport inline bool is_bounded() const override
    {
        return true;
    }

#endif  // TOPIC_DATA_TYPE_API_HAS_IS_BOUNDED

#ifdef TOPIC_DATA_TYPE_API_HAS_IS_PLAIN
    eProsima_user_DllExport inline bool is_plain() const override
    {
        return is_plain_impl();
    }

#endif  // TOPIC_DATA_TYPE_API_HAS_IS_PLAIN

#ifdef TOPIC_DATA_TYPE_API_HAS_CONSTRUCT_SAMPLE
    eProsima_user_DllExport inline bool construct_sample(
            void* memory) const override
    {
        new (memory) InnerStructureHelperChild();
        return true;
    }

#endif  // TOPIC_DATA_TYPE_API_HAS_CONSTRUCT_SAMPLE

    MD5 m_md5;
    unsigned char* m_keyBuffer;

private:

    static constexpr bool is_plain_impl()
    {
        return 24ULL == (detail::InnerStructureHelperChild_offset_of<InnerStructureHelperChild, detail::InnerStructureHelperChild_f>() + sizeof(uint64_t));

    }};

#ifndef SWIG
namespace detail {

    template<typename Tag, typename Tag::type M>
    struct InnerStructureHelperChildChild_rob
    {
        friend constexpr typename Tag::type get(
                Tag)
        {
            return M;
        }
    };

    struct InnerStructureHelperChildChild_f
    {
        typedef uint64_t InnerStructureHelperChildChild::* type;
        friend constexpr type get(
                InnerStructureHelperChildChild_f);
    };

    template struct InnerStructureHelperChildChild_rob<InnerStructureHelperChildChild_f, &InnerStructureHelperChildChild::m_var_childchild_ulonglong2>;

    template <typename T, typename Tag>
    inline size_t constexpr InnerStructureHelperChildChild_offset_of() {
        return ((::size_t) &reinterpret_cast<char const volatile&>((((T*)0)->*get(Tag()))));
    }
}
#endif

/*!
 * @brief This class represents the TopicDataType of the type InnerStructureHelperChildChild defined by the user in the IDL file.
 * @ingroup inheritance
 */
class InnerStructureHelperChildChildPubSubType : public eprosima::fastdds::dds::TopicDataType
{
public:

    typedef InnerStructureHelperChildChild type;

    eProsima_user_DllExport InnerStructureHelperChildChildPubSubType();

    eProsima_user_DllExport virtual ~InnerStructureHelperChildChildPubSubType() override;

    eProsima_user_DllExport virtual bool serialize(
            void* data,
            eprosima::fastrtps::rtps::SerializedPayload_t* payload) override;

    eProsima_user_DllExport virtual bool deserialize(
            eprosima::fastrtps::rtps::SerializedPayload_t* payload,
            void* data) override;

    eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(
            void* data) override;

    eProsima_user_DllExport virtual bool getKey(
            void* data,
            eprosima::fastrtps::rtps::InstanceHandle_t* ihandle,
            bool force_md5 = false) override;

    eProsima_user_DllExport virtual void* createData() override;

    eProsima_user_DllExport virtual void deleteData(
            void* data) override;

#ifdef TOPIC_DATA_TYPE_API_HAS_IS_BOUNDED
    eProsima_user_DllExport inline bool is_bounded() const override
    {
        return true;
    }

#endif  // TOPIC_DATA_TYPE_API_HAS_IS_BOUNDED

#ifdef TOPIC_DATA_TYPE_API_HAS_IS_PLAIN
    eProsima_user_DllExport inline bool is_plain() const override
    {
        return is_plain_impl();
    }

#endif  // TOPIC_DATA_TYPE_API_HAS_IS_PLAIN

#ifdef TOPIC_DATA_TYPE_API_HAS_CONSTRUCT_SAMPLE
    eProsima_user_DllExport inline bool construct_sample(
            void* memory) const override
    {
        new (memory) InnerStructureHelperChildChild();
        return true;
    }

#endif  // TOPIC_DATA_TYPE_API_HAS_CONSTRUCT_SAMPLE

    MD5 m_md5;
    unsigned char* m_keyBuffer;

private:

    static constexpr bool is_plain_impl()
    {
        return 40ULL == (detail::InnerStructureHelperChildChild_offset_of<InnerStructureHelperChildChild, detail::InnerStructureHelperChildChild_f>() + sizeof(uint64_t));

    }};

/*!
 * @brief This class represents the TopicDataType of the type InnerStructureHelperEmptyChild defined by the user in the IDL file.
 * @ingroup inheritance
 */
class InnerStructureHelperEmptyChildPubSubType : public eprosima::fastdds::dds::TopicDataType
{
public:

    typedef InnerStructureHelperEmptyChild type;

    eProsima_user_DllExport InnerStructureHelperEmptyChildPubSubType();

    eProsima_user_DllExport virtual ~InnerStructureHelperEmptyChildPubSubType() override;

    eProsima_user_DllExport virtual bool serialize(
            void* data,
            eprosima::fastrtps::rtps::SerializedPayload_t* payload) override;

    eProsima_user_DllExport virtual bool deserialize(
            eprosima::fastrtps::rtps::SerializedPayload_t* payload,
            void* data) override;

    eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(
            void* data) override;

    eProsima_user_DllExport virtual bool getKey(
            void* data,
            eprosima::fastrtps::rtps::InstanceHandle_t* ihandle,
            bool force_md5 = false) override;

    eProsima_user_DllExport virtual void* createData() override;

    eProsima_user_DllExport virtual void deleteData(
            void* data) override;

#ifdef TOPIC_DATA_TYPE_API_HAS_IS_BOUNDED
    eProsima_user_DllExport inline bool is_bounded() const override
    {
        return true;
    }

#endif  // TOPIC_DATA_TYPE_API_HAS_IS_BOUNDED

#ifdef TOPIC_DATA_TYPE_API_HAS_IS_PLAIN
    eProsima_user_DllExport inline bool is_plain() const override
    {
        return is_plain_impl();
    }

#endif  // TOPIC_DATA_TYPE_API_HAS_IS_PLAIN

#ifdef TOPIC_DATA_TYPE_API_HAS_CONSTRUCT_SAMPLE
    eProsima_user_DllExport inline bool construct_sample(
            void* memory) const override
    {
        new (memory) InnerStructureHelperEmptyChild();
        return true;
    }

#endif  // TOPIC_DATA_TYPE_API_HAS_CONSTRUCT_SAMPLE

    MD5 m_md5;
    unsigned char* m_keyBuffer;

private:

    static constexpr bool is_plain_impl()
    {
        return 8ULL == (detail::InnerStructureHelper_offset_of<InnerStructureHelper, detail::InnerStructureHelper_f>() + sizeof(float));    }};

#ifndef SWIG
namespace detail {

    template<typename Tag, typename Tag::type M>
    struct InnerEmptyStructureHelperChild_rob
    {
        friend constexpr typename Tag::type get(
                Tag)
        {
            return M;
        }
    };

    struct InnerEmptyStructureHelperChild_f
    {
        typedef uint64_t InnerEmptyStructureHelperChild::* type;
        friend constexpr type get(
                InnerEmptyStructureHelperChild_f);
    };

    template struct InnerEmptyStructureHelperChild_rob<InnerEmptyStructureHelperChild_f, &InnerEmptyStructureHelperChild::m_var_child_ulonglong>;

    template <typename T, typename Tag>
    inline size_t constexpr InnerEmptyStructureHelperChild_offset_of() {
        return ((::size_t) &reinterpret_cast<char const volatile&>((((T*)0)->*get(Tag()))));
    }
}
#endif

/*!
 * @brief This class represents the TopicDataType of the type InnerEmptyStructureHelperChild defined by the user in the IDL file.
 * @ingroup inheritance
 */
class InnerEmptyStructureHelperChildPubSubType : public eprosima::fastdds::dds::TopicDataType
{
public:

    typedef InnerEmptyStructureHelperChild type;

    eProsima_user_DllExport InnerEmptyStructureHelperChildPubSubType();

    eProsima_user_DllExport virtual ~InnerEmptyStructureHelperChildPubSubType() override;

    eProsima_user_DllExport virtual bool serialize(
            void* data,
            eprosima::fastrtps::rtps::SerializedPayload_t* payload) override;

    eProsima_user_DllExport virtual bool deserialize(
            eprosima::fastrtps::rtps::SerializedPayload_t* payload,
            void* data) override;

    eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(
            void* data) override;

    eProsima_user_DllExport virtual bool getKey(
            void* data,
            eprosima::fastrtps::rtps::InstanceHandle_t* ihandle,
            bool force_md5 = false) override;

    eProsima_user_DllExport virtual void* createData() override;

    eProsima_user_DllExport virtual void deleteData(
            void* data) override;

#ifdef TOPIC_DATA_TYPE_API_HAS_IS_BOUNDED
    eProsima_user_DllExport inline bool is_bounded() const override
    {
        return true;
    }

#endif  // TOPIC_DATA_TYPE_API_HAS_IS_BOUNDED

#ifdef TOPIC_DATA_TYPE_API_HAS_IS_PLAIN
    eProsima_user_DllExport inline bool is_plain() const override
    {
        return is_plain_impl();
    }

#endif  // TOPIC_DATA_TYPE_API_HAS_IS_PLAIN

#ifdef TOPIC_DATA_TYPE_API_HAS_CONSTRUCT_SAMPLE
    eProsima_user_DllExport inline bool construct_sample(
            void* memory) const override
    {
        new (memory) InnerEmptyStructureHelperChild();
        return true;
    }

#endif  // TOPIC_DATA_TYPE_API_HAS_CONSTRUCT_SAMPLE

    MD5 m_md5;
    unsigned char* m_keyBuffer;

private:

    static constexpr bool is_plain_impl()
    {
        return 16ULL == (detail::InnerEmptyStructureHelperChild_offset_of<InnerEmptyStructureHelperChild, detail::InnerEmptyStructureHelperChild_f>() + sizeof(uint64_t));

    }};

#ifndef SWIG
namespace detail {

    template<typename Tag, typename Tag::type M>
    struct StructuresInheritanceStruct_rob
    {
        friend constexpr typename Tag::type get(
                Tag)
        {
            return M;
        }
    };

    struct StructuresInheritanceStruct_f
    {
        typedef InnerEmptyStructureHelperChild StructuresInheritanceStruct::* type;
        friend constexpr type get(
                StructuresInheritanceStruct_f);
    };

    template struct StructuresInheritanceStruct_rob<StructuresInheritanceStruct_f, &StructuresInheritanceStruct::m_var_InnerEmptyStructureHelperChild>;

    template <typename T, typename Tag>
    inline size_t constexpr StructuresInheritanceStruct_offset_of() {
        return ((::size_t) &reinterpret_cast<char const volatile&>((((T*)0)->*get(Tag()))));
    }
}
#endif

/*!
 * @brief This class represents the TopicDataType of the type StructuresInheritanceStruct defined by the user in the IDL file.
 * @ingroup inheritance
 */
class StructuresInheritanceStructPubSubType : public eprosima::fastdds::dds::TopicDataType
{
public:

    typedef StructuresInheritanceStruct type;

    eProsima_user_DllExport StructuresInheritanceStructPubSubType();

    eProsima_user_DllExport virtual ~StructuresInheritanceStructPubSubType() override;

    eProsima_user_DllExport virtual bool serialize(
            void* data,
            eprosima::fastrtps::rtps::SerializedPayload_t* payload) override;

    eProsima_user_DllExport virtual bool deserialize(
            eprosima::fastrtps::rtps::SerializedPayload_t* payload,
            void* data) override;

    eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(
            void* data) override;

    eProsima_user_DllExport virtual bool getKey(
            void* data,
            eprosima::fastrtps::rtps::InstanceHandle_t* ihandle,
            bool force_md5 = false) override;

    eProsima_user_DllExport virtual void* createData() override;

    eProsima_user_DllExport virtual void deleteData(
            void* data) override;

#ifdef TOPIC_DATA_TYPE_API_HAS_IS_BOUNDED
    eProsima_user_DllExport inline bool is_bounded() const override
    {
        return true;
    }

#endif  // TOPIC_DATA_TYPE_API_HAS_IS_BOUNDED

#ifdef TOPIC_DATA_TYPE_API_HAS_IS_PLAIN
    eProsima_user_DllExport inline bool is_plain() const override
    {
        return is_plain_impl();
    }

#endif  // TOPIC_DATA_TYPE_API_HAS_IS_PLAIN

#ifdef TOPIC_DATA_TYPE_API_HAS_CONSTRUCT_SAMPLE
    eProsima_user_DllExport inline bool construct_sample(
            void* memory) const override
    {
        new (memory) StructuresInheritanceStruct();
        return true;
    }

#endif  // TOPIC_DATA_TYPE_API_HAS_CONSTRUCT_SAMPLE

    MD5 m_md5;
    unsigned char* m_keyBuffer;

private:

    static constexpr bool is_plain_impl()
    {
        return 88ULL == (detail::StructuresInheritanceStruct_offset_of<StructuresInheritanceStruct, detail::StructuresInheritanceStruct_f>() + sizeof(InnerEmptyStructureHelperChild));

    }};



#ifndef SWIG
namespace detail {

    template<typename Tag, typename Tag::type M>
    struct BitsetsChildInheritanceStruct_rob
    {
        friend constexpr typename Tag::type get(
                Tag)
        {
            return M;
        }
    };

    struct BitsetsChildInheritanceStruct_f
    {
        typedef InnerBitsetHelperChildChild BitsetsChildInheritanceStruct::* type;
        friend constexpr type get(
                BitsetsChildInheritanceStruct_f);
    };

    template struct BitsetsChildInheritanceStruct_rob<BitsetsChildInheritanceStruct_f, &BitsetsChildInheritanceStruct::m_var_InnerBitsetHelperChildChild>;

    template <typename T, typename Tag>
    inline size_t constexpr BitsetsChildInheritanceStruct_offset_of() {
        return ((::size_t) &reinterpret_cast<char const volatile&>((((T*)0)->*get(Tag()))));
    }
}
#endif

/*!
 * @brief This class represents the TopicDataType of the type BitsetsChildInheritanceStruct defined by the user in the IDL file.
 * @ingroup inheritance
 */
class BitsetsChildInheritanceStructPubSubType : public eprosima::fastdds::dds::TopicDataType
{
public:

    typedef BitsetsChildInheritanceStruct type;

    eProsima_user_DllExport BitsetsChildInheritanceStructPubSubType();

    eProsima_user_DllExport virtual ~BitsetsChildInheritanceStructPubSubType() override;

    eProsima_user_DllExport virtual bool serialize(
            void* data,
            eprosima::fastrtps::rtps::SerializedPayload_t* payload) override;

    eProsima_user_DllExport virtual bool deserialize(
            eprosima::fastrtps::rtps::SerializedPayload_t* payload,
            void* data) override;

    eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(
            void* data) override;

    eProsima_user_DllExport virtual bool getKey(
            void* data,
            eprosima::fastrtps::rtps::InstanceHandle_t* ihandle,
            bool force_md5 = false) override;

    eProsima_user_DllExport virtual void* createData() override;

    eProsima_user_DllExport virtual void deleteData(
            void* data) override;

#ifdef TOPIC_DATA_TYPE_API_HAS_IS_BOUNDED
    eProsima_user_DllExport inline bool is_bounded() const override
    {
        return true;
    }

#endif  // TOPIC_DATA_TYPE_API_HAS_IS_BOUNDED

#ifdef TOPIC_DATA_TYPE_API_HAS_IS_PLAIN
    eProsima_user_DllExport inline bool is_plain() const override
    {
        return is_plain_impl();
    }

#endif  // TOPIC_DATA_TYPE_API_HAS_IS_PLAIN

#ifdef TOPIC_DATA_TYPE_API_HAS_CONSTRUCT_SAMPLE
    eProsima_user_DllExport inline bool construct_sample(
            void* memory) const override
    {
        new (memory) BitsetsChildInheritanceStruct();
        return true;
    }

#endif  // TOPIC_DATA_TYPE_API_HAS_CONSTRUCT_SAMPLE

    MD5 m_md5;
    unsigned char* m_keyBuffer;

private:

    static constexpr bool is_plain_impl()
    {
        return 28ULL == (detail::BitsetsChildInheritanceStruct_offset_of<BitsetsChildInheritanceStruct, detail::BitsetsChildInheritanceStruct_f>() + sizeof(InnerBitsetHelperChildChild));

    }};

#endif // _FAST_DDS_GENERATED_INHERITANCE_PUBSUBTYPES_H_

