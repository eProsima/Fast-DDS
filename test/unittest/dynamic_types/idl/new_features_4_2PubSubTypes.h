// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file new_features_4_2PubSubTypes.h
 * This header file contains the declaration of the serialization functions.
 *
 * This file was generated by the tool fastcdrgen.
 */


#ifndef _NEW_FEATURES_4_2_PUBSUBTYPES_H_
#define _NEW_FEATURES_4_2_PUBSUBTYPES_H_

#include <fastrtps/config.h>
#include <fastrtps/TopicDataType.h>

#include "new_features_4_2.h"

#if !defined(GEN_API_VER) || (GEN_API_VER != 1)
#error Generated new_features_4_2 is not compatible with current installed Fast-RTPS. Please, regenerate it with fastrtpsgen.
#endif

/*!
 * @brief This class represents the TopicDataType of the type NewAliases defined by the user in the IDL file.
 * @ingroup NEW_FEATURES_4_2
 */
class NewAliasesPubSubType : public eprosima::fastrtps::TopicDataType {
public:
    typedef NewAliases type;

NewAliasesPubSubType();

virtual ~NewAliasesPubSubType();
virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
        bool force_md5 = false) override;
virtual void* createData() override;
virtual void deleteData(void * data) override;
    MD5 m_md5;
    unsigned char* m_keyBuffer;
};



namespace bitmodule
{



    /*!
     * @brief This class represents the TopicDataType of the type BitsetBitmask defined by the user in the IDL file.
     * @ingroup NEW_FEATURES_4_2
     */
    class BitsetBitmaskPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
        typedef BitsetBitmask type;

    BitsetBitmaskPubSubType();

    virtual ~BitsetBitmaskPubSubType();
    virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
    virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
            bool force_md5 = false) override;
    virtual void* createData() override;
    virtual void deleteData(void * data) override;
        MD5 m_md5;
        unsigned char* m_keyBuffer;
    };
    /*!
     * @brief This class represents the TopicDataType of the type BM2 defined by the user in the IDL file.
     * @ingroup NEW_FEATURES_4_2
     */
    class BM2PubSubType : public eprosima::fastrtps::TopicDataType {
    public:
        typedef BM2 type;

    BM2PubSubType();

    virtual ~BM2PubSubType();
    virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
    virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
    virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
    virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
            bool force_md5 = false) override;
    virtual void* createData() override;
    virtual void deleteData(void * data) override;
        MD5 m_md5;
        unsigned char* m_keyBuffer;
    };
}
/*!
 * @brief This class represents the TopicDataType of the type StructTest defined by the user in the IDL file.
 * @ingroup NEW_FEATURES_4_2
 */
class StructTestPubSubType : public eprosima::fastrtps::TopicDataType {
public:
    typedef StructTest type;

StructTestPubSubType();

virtual ~StructTestPubSubType();
virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
        bool force_md5 = false) override;
virtual void* createData() override;
virtual void deleteData(void * data) override;
    MD5 m_md5;
    unsigned char* m_keyBuffer;
};

#endif // _NEW_FEATURES_4_2_PUBSUBTYPES_H_